Running from installcheck: no
Test Protocol: none
PATH = /sources/automake-1.16.1/bin:/sources/automake-1.16.1/t/ax:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
++ pwd
/sources/automake-1.16.1/t/tap-diagnostic-custom.dir
+ fetch_tap_driver
+ AM_TAP_AWK=gawk
+ export AM_TAP_AWK
+ get_shell_script tap-driver.sh tap-driver
+ am_source=tap-driver.sh
+ am_target=tap-driver
+ test '!' -f tap-driver
+ test x = xyes
+ cp -f /sources/automake-1.16.1/lib/tap-driver.sh tap-driver
+ sed 10q tap-driver
#! /bin/sh
# Copyright (C) 2011-2018 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
+ unset am_target am_source
+ cat
+ cat
+ :
+ i=0
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ i=1
+ unindent
+ test x = x
++ printf '%s\n' '
  /^$/b                    # Nothing to do for empty lines.
  x                        # Get x<indent> into pattern space.
  /^$/{                    # No prior x<indent>, go prepare it.
    g                      # Copy this 1st non-blank line into pattern space.
    s/^\([	 ]*\).*/x\1/   # Prepare x<indent> in pattern space.
  }                        # Now: x<indent> in pattern and <line> in hold.
  G                        # Build x<indent>\n<line> in pattern space, and
  h                        # duplicate it into hold space.
  s/\n.*$//                # Restore x<indent> in pattern space, and
  x                        # exchange with the above duplicate in hold space.
  s/^x\(.*\)\n\1//         # Remove leading <indent> from <line>.
  s/^x.*\n//               # Restore <line> when there is no leading <indent>.
'
++ sed -e 's/  *# .*//'
+ sed_unindent_prog='
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ echo 'AM_T1_LOG_DRIVER_FLAGS = --no-comments'
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ i=2
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ echo 'AM_T2_LOG_DRIVER_FLAGS = --no-comments'
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ i=3
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ echo 'AM_T3_LOG_DRIVER_FLAGS = --no-comments'
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ i=4
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ echo 'AM_T4_LOG_DRIVER_FLAGS = --no-comments'
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ i=5
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ echo 'AM_T5_LOG_DRIVER_FLAGS = --no-comments'
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ i=6
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ echo 'AM_T6_LOG_DRIVER_FLAGS = --no-comments'
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ i=7
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ unindent
+ test 'x
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//' = x
+ sed '
  /^$/b
  x
  /^$/{
    g
    s/^\([	 ]*\).*/x\1/
  }
  G
  h
  s/\n.*$//
  x
  s/^x\(.*\)\n\1//
  s/^x.*\n//'
+ echo 'AM_T7_LOG_DRIVER_FLAGS = --no-comments'
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ for string in '## A letter' a '## A number' 1023 '## A non-alphabetic character' @ '## Some metacharacters (we need to repeat the "$" for make)' '^>;&*"|$$' '## A whitespace character' " " '## A tab character' "$tab" '## A string with more whitespace' "  ${tab}a b${tab} c" '## Note the we do not have the empty string here.  We prefer to' '## leave its behaviour in this context undefined for the moment.'
+ case $string in
+ continue
+ aclocal-1.16 -Werror
+ autoconf
+ automake-1.16 --foreign -Werror -Wall
+ ./configure
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /tools/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
+ run_make -O check
+ am__make_redirect_stdout=no
+ am__make_redirect_stderr=no
+ am__make_redirect_stdall=no
+ am__make_flags=
+ am__make_rc_exp=0
+ am_make_rc=0
+ test 2 -gt 0
+ case $1 in
+ am__make_redirect_stdout=yes
+ shift
+ test 1 -gt 0
+ case $1 in
+ break
+ using_gmake
+ case $am__using_gmake in
+ make --version -v
+ grep GNU
GNU Make 4.2.1
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
+ am__using_gmake=yes
+ return 0
+ :
+ test x '!=' x
+ : exec make check
+ set +x
+ test 0 -eq 253
+ test no = yes
+ test yes = yes
+ cat stdout
make  check-TESTS
make[1]: Entering directory '/sources/automake-1.16.1/t/tap-diagnostic-custom.dir'
make[2]: Entering directory '/sources/automake-1.16.1/t/tap-diagnostic-custom.dir'
PASS: foo1.t1 1
# foo1.t1: blah blah 1
PASS: foo2.t2 1
# foo2.t2: blah blah 2
PASS: foo3.t3 1
# foo3.t3: blah blah 3
PASS: foo4.t4 1
# foo4.t4: $ blah blah 4
PASS: foo5.t5 1
# foo5.t5: blah blah 5
PASS: foo6.t6 1
# foo6.t6: blah blah 6
PASS: foo7.t7 1
# foo7.t7: blah blah 7
============================================================================
Testsuite summary for tap-diagnostic-custom 1.0
============================================================================
# TOTAL: 7
# PASS:  7
# SKIP:  0
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================
make[2]: Leaving directory '/sources/automake-1.16.1/t/tap-diagnostic-custom.dir'
make[1]: Leaving directory '/sources/automake-1.16.1/t/tap-diagnostic-custom.dir'
+ test no = yes
+ case $am__make_rc_exp in
+ test 0 -ge 0
+ test 0 -le 255
+ test 0 -eq 0
+ count_test_results total=7 pass=7 fail=0 xpass=0 xfail=0 skip=0 error=0
+ total=ERR
+ pass=ERR
+ fail=ERR
+ xpass=ERR
+ xfail=ERR
+ skip=ERR
+ error=ERR
+ eval total=7 pass=7 fail=0 xpass=0 xfail=0 skip=0 error=0
++ total=7
++ pass=7
++ fail=0
++ xpass=0
++ xfail=0
++ skip=0
++ error=0
+ /bin/grep -E -i '(total|x?pass|x?fail|skip|error)' stdout
PASS: foo1.t1 1
PASS: foo2.t2 1
PASS: foo3.t3 1
PASS: foo4.t4 1
PASS: foo5.t5 1
PASS: foo6.t6 1
PASS: foo7.t7 1
# TOTAL: 7
# PASS:  7
# SKIP:  0
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
+ rc=0
+ set +e
++ grep -c '^PASS:' stdout
+ test 7 -eq 7
++ grep -c '^XFAIL:' stdout
+ test 0 -eq 0
++ grep -c '^SKIP:' stdout
+ test 0 -eq 0
++ grep -c '^FAIL:' stdout
+ test 0 -eq 0
++ grep -c '^XPASS:' stdout
+ test 0 -eq 0
++ grep -c '^ERROR:' stdout
+ test 0 -eq 0
+ grep '^# TOTAL:  *7$' stdout
# TOTAL: 7
+ grep '^# PASS:  *7$' stdout
# PASS:  7
+ grep '^# XFAIL:  *0$' stdout
# XFAIL: 0
+ grep '^# SKIP:  *0$' stdout
# SKIP:  0
+ grep '^# FAIL:  *0$' stdout
# FAIL:  0
+ grep '^# XPASS:  *0$' stdout
# XPASS: 0
+ grep '^# ERROR:  *0$' stdout
# ERROR: 0
+ test 0 -eq 0
+ cat later.mk
+ run_make -O check
+ am__make_redirect_stdout=no
+ am__make_redirect_stderr=no
+ am__make_redirect_stdall=no
+ am__make_flags=
+ am__make_rc_exp=0
+ am_make_rc=0
+ test 2 -gt 0
+ case $1 in
+ am__make_redirect_stdout=yes
+ shift
+ test 1 -gt 0
+ case $1 in
+ break
+ using_gmake
+ case $am__using_gmake in
+ return 0
+ :
+ test x '!=' x
+ : exec make check
+ set +x
+ test 0 -eq 253
+ test no = yes
+ test yes = yes
+ cat stdout
make  check-TESTS
make[1]: Entering directory '/sources/automake-1.16.1/t/tap-diagnostic-custom.dir'
make[2]: Entering directory '/sources/automake-1.16.1/t/tap-diagnostic-custom.dir'
PASS: foo1.t1 1
PASS: foo2.t2 1
PASS: foo3.t3 1
PASS: foo4.t4 1
PASS: foo5.t5 1
PASS: foo6.t6 1
PASS: foo7.t7 1
============================================================================
Testsuite summary for tap-diagnostic-custom 1.0
============================================================================
# TOTAL: 7
# PASS:  7
# SKIP:  0
# XFAIL: 0
# FAIL:  0
# XPASS: 0
# ERROR: 0
============================================================================
make[2]: Leaving directory '/sources/automake-1.16.1/t/tap-diagnostic-custom.dir'
make[1]: Leaving directory '/sources/automake-1.16.1/t/tap-diagnostic-custom.dir'
+ test no = yes
+ case $am__make_rc_exp in
+ test 0 -ge 0
+ test 0 -le 255
+ test 0 -eq 0
+ /bin/grep -F 'blah blah' stdout
+ :
+ am_exit_trap 0
+ exit_status=0
+ set +e
+ cd /sources/automake-1.16.1
+ test none = tap
+ case $am_explicit_skips in
+ test 0 -eq 0
+ am_keeping_testdirs
+ case $keep_testdirs in
+ return 1
+ rm_rf_ t/tap-diagnostic-custom.dir
+ test 1 -gt 0
+ /usr/bin/perl /sources/automake-1.16.1/t/ax/deltree.pl t/tap-diagnostic-custom.dir
+ set +x
PASS t/tap-diagnostic-custom.sh (exit status: 0)
