Running from installcheck: no
Test Protocol: none
PATH = /sources/automake-1.16.1/bin:/sources/automake-1.16.1/t/ax:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
++ pwd
/sources/automake-1.16.1/t/specflg-dummy.dir
+ set +f
+ oIFS=' 	
'
+ nl='
'
+ matches=
+ cat
+ :
+ cat
+ cat
+ aclocal-1.16 -Werror
+ cat
+ add_match 'prog1-source1.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)'
+ cat
+ add_match 'prog2-source2.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)'
+ cat
+ add_match 'prog3-source3.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)'
+ cat
+ add_match 'prog4-source4.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)'
+ cat
+ add_match 'prog5-source5.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)'
+ cat
+ add_match 'prog6-source6.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)'
+ cat
+ add_match 'prog7-source7.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)'
+ cat
+ add_match 'prog8-source8.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)'
+ cat
+ add_match 'prog9-source9.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)'
+ cat
+ add_match 'prog10-source10.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)'
+ cat
+ add_match 'linkprog_LINK ='
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)
linkprog_LINK ='
+ cat
+ add_match 'libstatic_a-static123.$(OBJEXT)'
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)
linkprog_LINK =
libstatic_a-static123.$(OBJEXT)'
+ cat
+ add_match libshared1_la-shared1.lo
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)
linkprog_LINK =
libstatic_a-static123.$(OBJEXT)
libshared1_la-shared1.lo'
+ cat
+ add_match libshared2_la-shared2.lo
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)
linkprog_LINK =
libstatic_a-static123.$(OBJEXT)
libshared1_la-shared1.lo
libshared2_la-shared2.lo'
+ cat
+ add_match parse1-parse.c
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)
linkprog_LINK =
libstatic_a-static123.$(OBJEXT)
libshared1_la-shared1.lo
libshared2_la-shared2.lo
parse1-parse.c'
+ cat
+ add_match parse2-parse.cpp
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)
linkprog_LINK =
libstatic_a-static123.$(OBJEXT)
libshared1_la-shared1.lo
libshared2_la-shared2.lo
parse1-parse.c
parse2-parse.cpp'
+ cat
+ add_match lexer1-lex.c
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)
linkprog_LINK =
libstatic_a-static123.$(OBJEXT)
libshared1_la-shared1.lo
libshared2_la-shared2.lo
parse1-parse.c
parse2-parse.cpp
lexer1-lex.c'
+ cat
+ add_match lexer2-lexer.cc
+ matches='
prog1-source1.$(OBJEXT)
prog2-source2.$(OBJEXT)
prog3-source3.$(OBJEXT)
prog4-source4.$(OBJEXT)
prog5-source5.$(OBJEXT)
prog6-source6.$(OBJEXT)
prog7-source7.$(OBJEXT)
prog8-source8.$(OBJEXT)
prog9-source9.$(OBJEXT)
prog10-source10.$(OBJEXT)
linkprog_LINK =
libstatic_a-static123.$(OBJEXT)
libshared1_la-shared1.lo
libshared2_la-shared2.lo
parse1-parse.c
parse2-parse.cpp
lexer1-lex.c
lexer2-lexer.cc'
+ cat Makefile.am
bin_PROGRAMS =
lib_LIBRARIES =
lib_LTLIBRARIES =
bin_PROGRAMS += prog1
prog1_SOURCES = source1.c
prog1_CFLAGS = $(AM_CFLAGS)
bin_PROGRAMS += prog2
prog2_SOURCES = source2.c
prog2_CPPFLAGS = $(AM_CPPFLAGS)
bin_PROGRAMS += prog3
prog3_SOURCES = source3.cxx
prog3_CXXFLAGS = $(AM_CXXFLAGS)
bin_PROGRAMS += prog4
prog4_SOURCES = source4.c++
prog4_CPPFLAGS = $(AM_CPPFLAGS)
bin_PROGRAMS += prog5
prog5_SOURCES = source5.f
prog5_FFLAGS = $(AM_FFLAGS)
bin_PROGRAMS += prog6
prog6_SOURCES = source6.f90
prog6_FCFLAGS = $(AM_FCFLAGS)
bin_PROGRAMS += prog7
prog7_SOURCES = source7.r
prog7_RFLAGS = $(AM_RFLAGS)
bin_PROGRAMS += prog8
prog8_SOURCES = source8.java
prog8_GCJFLAGS = $(AM_GCJFLAGS)
bin_PROGRAMS += prog9
prog9_SOURCES = source9.upc
prog9_UPCFLAGS = $(AM_UPCFLAGS)
bin_PROGRAMS += prog10
prog10_SOURCES = source10.m
prog10_OBJCFLAGS = $(AM_OBJCFLAGS)
bin_PROGRAMS += linkprog
linkprog_SOURCES = linkprog.c
linkprog_LDFLAGS = $(AM_LDFLAGS)
lib_LIBRARIES += libstatic.a
libstatic_a_SOURCES = static123.c
libstatic_a_CFLAGS = $(AM_CFLAGS)
lib_LTLIBRARIES += libshared1.la
libshared1_la_SOURCES = shared1.c
libshared1_la_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS)
lib_LTLIBRARIES += libshared2.la
libshared2_la_SOURCES = shared2.cc
libshared2_la_CXXFLAGS = $(AM_CXXFLAGS)
bin_PROGRAMS += parse1
parse1_SOURCES = parse.y
parse1_YFLAGS = $(AM_YFLAGS)
bin_PROGRAMS += parse2
parse2_SOURCES = parse.ypp
parse2_YFLAGS = $(AM_YFLAGS)
bin_PROGRAMS += lexer1
lexer1_SOURCES = lex.l
lexer1_LFLAGS = $(AM_YFLAGS)
bin_PROGRAMS += lexer2
lexer2_SOURCES = lexer.ll
lexer2_LFLAGS = $(AM_YFLAGS)
+ automake-1.16 --foreign -Werror -Wall -a
configure.ac:11: installing './ar-lib'
configure.ac: installing './ylwrap'
configure.ac:13: installing './config.guess'
configure.ac:13: installing './config.sub'
+ do_check
+ IFS='
'
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog1-source1.$(OBJEXT)' Makefile.in
am_prog1_OBJECTS = prog1-source1.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog2-source2.$(OBJEXT)' Makefile.in
am_prog2_OBJECTS = prog2-source2.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog3-source3.$(OBJEXT)' Makefile.in
am_prog3_OBJECTS = prog3-source3.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog4-source4.$(OBJEXT)' Makefile.in
am_prog4_OBJECTS = prog4-source4.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog5-source5.$(OBJEXT)' Makefile.in
am_prog5_OBJECTS = prog5-source5.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog6-source6.$(OBJEXT)' Makefile.in
am_prog6_OBJECTS = prog6-source6.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog7-source7.$(OBJEXT)' Makefile.in
am_prog7_OBJECTS = prog7-source7.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog8-source8.$(OBJEXT)' Makefile.in
am_prog8_OBJECTS = prog8-source8.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog9-source9.$(OBJEXT)' Makefile.in
am_prog9_OBJECTS = prog9-source9.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog10-source10.$(OBJEXT)' Makefile.in
am_prog10_OBJECTS = prog10-source10.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'linkprog_LINK =' Makefile.in
linkprog_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'libstatic_a-static123.$(OBJEXT)' Makefile.in
am_libstatic_a_OBJECTS = libstatic_a-static123.$(OBJEXT)
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F libshared1_la-shared1.lo Makefile.in
am_libshared1_la_OBJECTS = libshared1_la-shared1.lo
libshared1_la-shared1.lo: shared1.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) $(libshared1_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libshared1_la-shared1.lo -MD -MP -MF $(DEPDIR)/libshared1_la-shared1.Tpo -c -o libshared1_la-shared1.lo `test -f 'shared1.c' || echo '$(srcdir)/'`shared1.c
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='shared1.c' object='libshared1_la-shared1.lo' libtool=yes @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) $(libshared1_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libshared1_la-shared1.lo `test -f 'shared1.c' || echo '$(srcdir)/'`shared1.c
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F libshared2_la-shared2.lo Makefile.in
am_libshared2_la_OBJECTS = libshared2_la-shared2.lo
libshared2_la-shared2.lo: shared2.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libshared2_la_CXXFLAGS) $(CXXFLAGS) -MT libshared2_la-shared2.lo -MD -MP -MF $(DEPDIR)/libshared2_la-shared2.Tpo -c -o libshared2_la-shared2.lo `test -f 'shared2.cc' || echo '$(srcdir)/'`shared2.cc
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='shared2.cc' object='libshared2_la-shared2.lo' libtool=yes @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libshared2_la_CXXFLAGS) $(CXXFLAGS) -c -o libshared2_la-shared2.lo `test -f 'shared2.cc' || echo '$(srcdir)/'`shared2.cc
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F parse1-parse.c Makefile.in
	ltmain.sh missing parse1-parse.c parse2-parse.cpp ylwrap
parse1-parse.c: parse.y
	$(SHELL) $(YLWRAP) `test -f 'parse.y' || echo '$(srcdir)/'`parse.y y.tab.c parse1-parse.c y.tab.h `echo parse1-parse.c | $(am__yacc_c2h)` y.output parse1-parse.output -- $(YACC) $(parse1_YFLAGS) $(YFLAGS)
	-rm -f parse1-parse.c
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F parse2-parse.cpp Makefile.in
	ltmain.sh missing parse1-parse.c parse2-parse.cpp ylwrap
parse2-parse.cpp: parse.ypp
	$(SHELL) $(YLWRAP) `test -f 'parse.ypp' || echo '$(srcdir)/'`parse.ypp y.tab.c parse2-parse.cpp y.tab.h `echo parse2-parse.cpp | $(am__yacc_c2h)` y.output parse2-parse.output -- $(YACC) $(parse2_YFLAGS) $(YFLAGS)
	-rm -f parse2-parse.cpp
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F lexer1-lex.c Makefile.in
	config.sub depcomp install-sh lexer1-lex.c lexer2-lexer.cc \
lexer1-lex.c: lex.l
	$(SHELL) $(YLWRAP) `test -f 'lex.l' || echo '$(srcdir)/'`lex.l $(LEX_OUTPUT_ROOT).c lexer1-lex.c -- $(LEX) $(lexer1_LFLAGS) $(LFLAGS)
	-rm -f lexer1-lex.c
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F lexer2-lexer.cc Makefile.in
	config.sub depcomp install-sh lexer1-lex.c lexer2-lexer.cc \
lexer2-lexer.cc: lexer.ll
	$(SHELL) $(YLWRAP) `test -f 'lexer.ll' || echo '$(srcdir)/'`lexer.ll $(LEX_OUTPUT_ROOT).c lexer2-lexer.cc -- $(LEX) $(lexer2_LFLAGS) $(LFLAGS)
	-rm -f lexer2-lexer.cc
+ IFS=' 	
'
+ sed '
  s|^\(.*\)_SOURCES *= *|sub_\1_SOURCES = srcsub/|
  s|^\(.*\)PROGRAMS *+= *|\1PROGRAMS += sub/|
  s|^\(.*\)LIBRARIES *+= *|\1LIBRARIES += sub/|
  s|^\(.*\)FLAGS *=|sub_\1FLAGS =|
' Makefile.am
+ cat - t
+ rm -f t
+ cat Makefile.am
AUTOMAKE_OPTIONS = subdir-objects
bin_PROGRAMS =
lib_LIBRARIES =
lib_LTLIBRARIES =
bin_PROGRAMS += sub/prog1
sub_prog1_SOURCES = srcsub/source1.c
sub_prog1_CFLAGS = $(AM_CFLAGS)
bin_PROGRAMS += sub/prog2
sub_prog2_SOURCES = srcsub/source2.c
sub_prog2_CPPFLAGS = $(AM_CPPFLAGS)
bin_PROGRAMS += sub/prog3
sub_prog3_SOURCES = srcsub/source3.cxx
sub_prog3_CXXFLAGS = $(AM_CXXFLAGS)
bin_PROGRAMS += sub/prog4
sub_prog4_SOURCES = srcsub/source4.c++
sub_prog4_CPPFLAGS = $(AM_CPPFLAGS)
bin_PROGRAMS += sub/prog5
sub_prog5_SOURCES = srcsub/source5.f
sub_prog5_FFLAGS = $(AM_FFLAGS)
bin_PROGRAMS += sub/prog6
sub_prog6_SOURCES = srcsub/source6.f90
sub_prog6_FCFLAGS = $(AM_FCFLAGS)
bin_PROGRAMS += sub/prog7
sub_prog7_SOURCES = srcsub/source7.r
sub_prog7_RFLAGS = $(AM_RFLAGS)
bin_PROGRAMS += sub/prog8
sub_prog8_SOURCES = srcsub/source8.java
sub_prog8_GCJFLAGS = $(AM_GCJFLAGS)
bin_PROGRAMS += sub/prog9
sub_prog9_SOURCES = srcsub/source9.upc
sub_prog9_UPCFLAGS = $(AM_UPCFLAGS)
bin_PROGRAMS += sub/prog10
sub_prog10_SOURCES = srcsub/source10.m
sub_prog10_OBJCFLAGS = $(AM_OBJCFLAGS)
bin_PROGRAMS += sub/linkprog
sub_linkprog_SOURCES = srcsub/linkprog.c
sub_linkprog_LDFLAGS = $(AM_LDFLAGS)
lib_LIBRARIES += sub/libstatic.a
sub_libstatic_a_SOURCES = srcsub/static123.c
sub_libstatic_a_CFLAGS = $(AM_CFLAGS)
lib_LTLIBRARIES += sub/libshared1.la
sub_libshared1_la_SOURCES = srcsub/shared1.c
sub_libshared1_la_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS)
lib_LTLIBRARIES += sub/libshared2.la
sub_libshared2_la_SOURCES = srcsub/shared2.cc
sub_libshared2_la_CXXFLAGS = $(AM_CXXFLAGS)
bin_PROGRAMS += sub/parse1
sub_parse1_SOURCES = srcsub/parse.y
sub_parse1_YFLAGS = $(AM_YFLAGS)
bin_PROGRAMS += sub/parse2
sub_parse2_SOURCES = srcsub/parse.ypp
sub_parse2_YFLAGS = $(AM_YFLAGS)
bin_PROGRAMS += sub/lexer1
sub_lexer1_SOURCES = srcsub/lex.l
sub_lexer1_LFLAGS = $(AM_YFLAGS)
bin_PROGRAMS += sub/lexer2
sub_lexer2_SOURCES = srcsub/lexer.ll
sub_lexer2_LFLAGS = $(AM_YFLAGS)
+ automake-1.16 --foreign -Werror -Wall
+ do_check
+ IFS='
'
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog1-source1.$(OBJEXT)' Makefile.in
am_sub_prog1_OBJECTS = srcsub/sub_prog1-source1.$(OBJEXT)
srcsub/sub_prog1-source1.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog2-source2.$(OBJEXT)' Makefile.in
am_sub_prog2_OBJECTS = srcsub/sub_prog2-source2.$(OBJEXT)
srcsub/sub_prog2-source2.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog3-source3.$(OBJEXT)' Makefile.in
am_sub_prog3_OBJECTS = srcsub/sub_prog3-source3.$(OBJEXT)
srcsub/sub_prog3-source3.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog4-source4.$(OBJEXT)' Makefile.in
am_sub_prog4_OBJECTS = srcsub/sub_prog4-source4.$(OBJEXT)
srcsub/sub_prog4-source4.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog5-source5.$(OBJEXT)' Makefile.in
am_sub_prog5_OBJECTS = srcsub/sub_prog5-source5.$(OBJEXT)
srcsub/sub_prog5-source5.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog6-source6.$(OBJEXT)' Makefile.in
am_sub_prog6_OBJECTS = srcsub/sub_prog6-source6.$(OBJEXT)
srcsub/sub_prog6-source6.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog7-source7.$(OBJEXT)' Makefile.in
am_sub_prog7_OBJECTS = srcsub/sub_prog7-source7.$(OBJEXT)
srcsub/sub_prog7-source7.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog8-source8.$(OBJEXT)' Makefile.in
am_sub_prog8_OBJECTS = srcsub/sub_prog8-source8.$(OBJEXT)
srcsub/sub_prog8-source8.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog9-source9.$(OBJEXT)' Makefile.in
am_sub_prog9_OBJECTS = srcsub/sub_prog9-source9.$(OBJEXT)
srcsub/sub_prog9-source9.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'prog10-source10.$(OBJEXT)' Makefile.in
am_sub_prog10_OBJECTS = srcsub/sub_prog10-source10.$(OBJEXT)
srcsub/sub_prog10-source10.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'linkprog_LINK =' Makefile.in
sub_linkprog_LINK = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F 'libstatic_a-static123.$(OBJEXT)' Makefile.in
	srcsub/sub_libstatic_a-static123.$(OBJEXT)
srcsub/sub_libstatic_a-static123.$(OBJEXT): srcsub/$(am__dirstamp) \
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F libshared1_la-shared1.lo Makefile.in
am_sub_libshared1_la_OBJECTS = srcsub/sub_libshared1_la-shared1.lo
srcsub/sub_libshared1_la-shared1.lo: srcsub/$(am__dirstamp) \
srcsub/sub_libshared1_la-shared1.lo: srcsub/shared1.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) $(sub_libshared1_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT srcsub/sub_libshared1_la-shared1.lo -MD -MP -MF srcsub/$(DEPDIR)/sub_libshared1_la-shared1.Tpo -c -o srcsub/sub_libshared1_la-shared1.lo `test -f 'srcsub/shared1.c' || echo '$(srcdir)/'`srcsub/shared1.c
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='srcsub/shared1.c' object='srcsub/sub_libshared1_la-shared1.lo' libtool=yes @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) $(sub_libshared1_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o srcsub/sub_libshared1_la-shared1.lo `test -f 'srcsub/shared1.c' || echo '$(srcdir)/'`srcsub/shared1.c
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F libshared2_la-shared2.lo Makefile.in
am_sub_libshared2_la_OBJECTS = srcsub/sub_libshared2_la-shared2.lo
srcsub/sub_libshared2_la-shared2.lo: srcsub/$(am__dirstamp) \
srcsub/sub_libshared2_la-shared2.lo: srcsub/shared2.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sub_libshared2_la_CXXFLAGS) $(CXXFLAGS) -MT srcsub/sub_libshared2_la-shared2.lo -MD -MP -MF srcsub/$(DEPDIR)/sub_libshared2_la-shared2.Tpo -c -o srcsub/sub_libshared2_la-shared2.lo `test -f 'srcsub/shared2.cc' || echo '$(srcdir)/'`srcsub/shared2.cc
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='srcsub/shared2.cc' object='srcsub/sub_libshared2_la-shared2.lo' libtool=yes @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sub_libshared2_la_CXXFLAGS) $(CXXFLAGS) -c -o srcsub/sub_libshared2_la-shared2.lo `test -f 'srcsub/shared2.cc' || echo '$(srcdir)/'`srcsub/shared2.cc
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F parse1-parse.c Makefile.in
	srcsub/sub_parse1-parse.c srcsub/sub_parse2-parse.cpp ylwrap
srcsub/sub_parse1-parse.c: srcsub/parse.y
	$(SHELL) $(YLWRAP) `test -f 'srcsub/parse.y' || echo '$(srcdir)/'`srcsub/parse.y y.tab.c srcsub/sub_parse1-parse.c y.tab.h `echo srcsub/sub_parse1-parse.c | $(am__yacc_c2h)` y.output srcsub/sub_parse1-parse.output -- $(YACC) $(sub_parse1_YFLAGS) $(YFLAGS)
	-rm -f srcsub/sub_parse1-parse.c
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F parse2-parse.cpp Makefile.in
	srcsub/sub_parse1-parse.c srcsub/sub_parse2-parse.cpp ylwrap
srcsub/sub_parse2-parse.cpp: srcsub/parse.ypp
	$(SHELL) $(YLWRAP) `test -f 'srcsub/parse.ypp' || echo '$(srcdir)/'`srcsub/parse.ypp y.tab.c srcsub/sub_parse2-parse.cpp y.tab.h `echo srcsub/sub_parse2-parse.cpp | $(am__yacc_c2h)` y.output srcsub/sub_parse2-parse.output -- $(YACC) $(sub_parse2_YFLAGS) $(YFLAGS)
	-rm -f srcsub/sub_parse2-parse.cpp
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F lexer1-lex.c Makefile.in
	srcsub/sub_lexer1-lex.c srcsub/sub_lexer2-lexer.cc \
srcsub/sub_lexer1-lex.c: srcsub/lex.l
	$(SHELL) $(YLWRAP) `test -f 'srcsub/lex.l' || echo '$(srcdir)/'`srcsub/lex.l $(LEX_OUTPUT_ROOT).c srcsub/sub_lexer1-lex.c -- $(LEX) $(sub_lexer1_LFLAGS) $(LFLAGS)
	-rm -f srcsub/sub_lexer1-lex.c
+ for string in $matches
+ IFS=' 	
'
+ /bin/grep -F lexer2-lexer.cc Makefile.in
	srcsub/sub_lexer1-lex.c srcsub/sub_lexer2-lexer.cc \
srcsub/sub_lexer2-lexer.cc: srcsub/lexer.ll
	$(SHELL) $(YLWRAP) `test -f 'srcsub/lexer.ll' || echo '$(srcdir)/'`srcsub/lexer.ll $(LEX_OUTPUT_ROOT).c srcsub/sub_lexer2-lexer.cc -- $(LEX) $(sub_lexer2_LFLAGS) $(LFLAGS)
	-rm -f srcsub/sub_lexer2-lexer.cc
+ IFS=' 	
'
+ :
+ am_exit_trap 0
+ exit_status=0
+ set +e
+ cd /sources/automake-1.16.1
+ test none = tap
+ case $am_explicit_skips in
+ test 0 -eq 0
+ am_keeping_testdirs
+ case $keep_testdirs in
+ return 1
+ rm_rf_ t/specflg-dummy.dir
+ test 1 -gt 0
+ /usr/bin/perl /sources/automake-1.16.1/t/ax/deltree.pl t/specflg-dummy.dir
+ set +x
PASS t/specflg-dummy.sh (exit status: 0)
