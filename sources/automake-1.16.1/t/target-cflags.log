Running from installcheck: no
Test Protocol: none
PATH = /sources/automake-1.16.1/bin:/sources/automake-1.16.1/t/ax:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
++ pwd
/sources/automake-1.16.1/t/target-cflags.dir
+ cat
+ cat
+ cat
+ cat
+ aclocal-1.16 -Werror
+ autoconf
+ automake-1.16 --foreign -Werror -Wall -a
+ mkdir build
+ cd build
+ ../configure
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /tools/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking for gcc... cc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether cc accepts -g... yes
checking for cc option to accept ISO C89... none needed
checking whether cc understands -c and -o together... yes
checking whether make supports the include directive... yes (GNU style)
checking dependency style of cc... gcc3
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: executing depfiles commands
+ make
cc -DPACKAGE_NAME=\"target-cflags\" -DPACKAGE_TARNAME=\"target-cflags\" -DPACKAGE_VERSION=\"1.0\" -DPACKAGE_STRING=\"target-cflags\ 1.0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"target-cflags\" -DVERSION=\"1.0\" -I. -I..    -DFOO -g -O2 -c -o foo-foo.o `test -f 'foo.c' || echo '../'`foo.c
cc -DFOO -g -O2   -o foo foo-foo.o  
cc -DPACKAGE_NAME=\"target-cflags\" -DPACKAGE_TARNAME=\"target-cflags\" -DPACKAGE_VERSION=\"1.0\" -DPACKAGE_STRING=\"target-cflags\ 1.0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"target-cflags\" -DVERSION=\"1.0\" -I. -I..     -g -O2 -c -o bar.o ../bar.c
cc  -g -O2   -o bar bar.o  
+ cross_compiling
+ test x '!=' x
+ ./foo
+ ./bar
+ cd ..
+ ./configure
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /tools/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking for gcc... cc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether cc accepts -g... yes
checking for cc option to accept ISO C89... none needed
checking whether cc understands -c and -o together... yes
checking whether make supports the include directive... yes (GNU style)
checking dependency style of cc... gcc3
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: executing depfiles commands
+ make
cc -DPACKAGE_NAME=\"target-cflags\" -DPACKAGE_TARNAME=\"target-cflags\" -DPACKAGE_VERSION=\"1.0\" -DPACKAGE_STRING=\"target-cflags\ 1.0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"target-cflags\" -DVERSION=\"1.0\" -I.    -DFOO -g -O2 -c -o foo-foo.o `test -f 'foo.c' || echo './'`foo.c
cc -DFOO -g -O2   -o foo foo-foo.o  
cc -DPACKAGE_NAME=\"target-cflags\" -DPACKAGE_TARNAME=\"target-cflags\" -DPACKAGE_VERSION=\"1.0\" -DPACKAGE_STRING=\"target-cflags\ 1.0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"target-cflags\" -DVERSION=\"1.0\" -I.     -g -O2 -c -o bar.o bar.c
cc  -g -O2   -o bar bar.o  
+ cross_compiling
+ test x '!=' x
+ ./foo
+ ./bar
+ :
+ am_exit_trap 0
+ exit_status=0
+ set +e
+ cd /sources/automake-1.16.1
+ test none = tap
+ case $am_explicit_skips in
+ test 0 -eq 0
+ am_keeping_testdirs
+ case $keep_testdirs in
+ return 1
+ rm_rf_ t/target-cflags.dir
+ test 1 -gt 0
+ /usr/bin/perl /sources/automake-1.16.1/t/ax/deltree.pl t/target-cflags.dir
+ set +x
PASS t/target-cflags.sh (exit status: 0)
