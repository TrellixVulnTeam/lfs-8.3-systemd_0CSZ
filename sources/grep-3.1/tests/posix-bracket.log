++ initial_cwd_=/sources/grep-3.1/tests
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /sources/grep-3.1/tests gt-posix-bracket.XXXX
+++ case $# in
+++ destdir_=/sources/grep-3.1/tests
+++ template_=gt-posix-bracket.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/sources/grep-3.1/tests/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/sources/grep-3.1/tests/gt-posix-bracket.5vPd
+++ case $d in
+++ :
+++ test -d /sources/grep-3.1/tests/gt-posix-bracket.5vPd
++++ ls -dgo /sources/grep-3.1/tests/gt-posix-bracket.5vPd
+++ perms='drwx------ 2 4096 Nov 27 05:56 /sources/grep-3.1/tests/gt-posix-bracket.5vPd'
+++ case $perms in
+++ :
+++ echo /sources/grep-3.1/tests/gt-posix-bracket.5vPd
+++ return
++ test_dir_=/sources/grep-3.1/tests/gt-posix-bracket.5vPd
++ cd /sources/grep-3.1/tests/gt-posix-bracket.5vPd
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ../src
+ test 1 '!=' 0
+ path_dir_=../src
+ case $path_dir_ in
+ abs_path_dir_=/sources/grep-3.1/tests/../src
+ case $abs_path_dir_ in
+ PATH=/sources/grep-3.1/tests/../src:/sources/grep-3.1/src:./src:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
+ create_exe_shims_ /sources/grep-3.1/tests/../src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ LC_ALL=C
+ export LC_ALL
+ fail=0
+ echo a
+ for bracketed in '[.a.]' '[.a.]-a' 'a-[.a.]' '[.a.]-[.a.]' '[=a=]' '[:alpha:]' 'a-a[.-.]--'
+ grep '[[.a.]]' in
+ compare in out
+ compare_dev_null_ in out
+ test 2 = 2
+ test xin = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ in out
+ diff -u in out
+ grep '[^[.a.]]' in
+ test 1 -eq 1
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ for bracketed in '[.a.]' '[.a.]-a' 'a-[.a.]' '[.a.]-[.a.]' '[=a=]' '[:alpha:]' 'a-a[.-.]--'
+ grep '[[.a.]-a]' in
+ compare in out
+ compare_dev_null_ in out
+ test 2 = 2
+ test xin = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ in out
+ diff -u in out
+ grep '[^[.a.]-a]' in
+ test 1 -eq 1
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ for bracketed in '[.a.]' '[.a.]-a' 'a-[.a.]' '[.a.]-[.a.]' '[=a=]' '[:alpha:]' 'a-a[.-.]--'
+ grep '[a-[.a.]]' in
+ compare in out
+ compare_dev_null_ in out
+ test 2 = 2
+ test xin = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ in out
+ diff -u in out
+ grep '[^a-[.a.]]' in
+ test 1 -eq 1
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ for bracketed in '[.a.]' '[.a.]-a' 'a-[.a.]' '[.a.]-[.a.]' '[=a=]' '[:alpha:]' 'a-a[.-.]--'
+ grep '[[.a.]-[.a.]]' in
+ compare in out
+ compare_dev_null_ in out
+ test 2 = 2
+ test xin = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ in out
+ diff -u in out
+ grep '[^[.a.]-[.a.]]' in
+ test 1 -eq 1
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ for bracketed in '[.a.]' '[.a.]-a' 'a-[.a.]' '[.a.]-[.a.]' '[=a=]' '[:alpha:]' 'a-a[.-.]--'
+ grep '[[=a=]]' in
+ compare in out
+ compare_dev_null_ in out
+ test 2 = 2
+ test xin = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ in out
+ diff -u in out
+ grep '[^[=a=]]' in
+ test 1 -eq 1
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ for bracketed in '[.a.]' '[.a.]-a' 'a-[.a.]' '[.a.]-[.a.]' '[=a=]' '[:alpha:]' 'a-a[.-.]--'
+ grep '[[:alpha:]]' in
+ compare in out
+ compare_dev_null_ in out
+ test 2 = 2
+ test xin = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ in out
+ diff -u in out
+ grep '[^[:alpha:]]' in
+ test 1 -eq 1
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ for bracketed in '[.a.]' '[.a.]-a' 'a-[.a.]' '[.a.]-[.a.]' '[=a=]' '[:alpha:]' 'a-a[.-.]--'
+ grep '[a-a[.-.]--]' in
+ compare in out
+ compare_dev_null_ in out
+ test 2 = 2
+ test xin = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ in out
+ diff -u in out
+ grep '[^a-a[.-.]--]' in
+ test 1 -eq 1
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ test '' = yes
+ cd /sources/grep-3.1/tests
+ chmod -R u+rwx /sources/grep-3.1/tests/gt-posix-bracket.5vPd
+ rm -rf /sources/grep-3.1/tests/gt-posix-bracket.5vPd
+ exit 0
PASS posix-bracket (exit status: 0)
