++ initial_cwd_=/sources/grep-3.1/tests
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /sources/grep-3.1/tests gt-utf8-bracket.XXXX
+++ case $# in
+++ destdir_=/sources/grep-3.1/tests
+++ template_=gt-utf8-bracket.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/sources/grep-3.1/tests/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/sources/grep-3.1/tests/gt-utf8-bracket.ZSex
+++ case $d in
+++ :
+++ test -d /sources/grep-3.1/tests/gt-utf8-bracket.ZSex
++++ ls -dgo /sources/grep-3.1/tests/gt-utf8-bracket.ZSex
+++ perms='drwx------ 2 4096 Nov 27 05:56 /sources/grep-3.1/tests/gt-utf8-bracket.ZSex'
+++ case $perms in
+++ :
+++ echo /sources/grep-3.1/tests/gt-utf8-bracket.ZSex
+++ return
++ test_dir_=/sources/grep-3.1/tests/gt-utf8-bracket.ZSex
++ cd /sources/grep-3.1/tests/gt-utf8-bracket.ZSex
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ../src
+ test 1 '!=' 0
+ path_dir_=../src
+ case $path_dir_ in
+ abs_path_dir_=/sources/grep-3.1/tests/../src
+ case $abs_path_dir_ in
+ PATH=/sources/grep-3.1/tests/../src:/sources/grep-3.1/src:./src:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
+ create_exe_shims_ /sources/grep-3.1/tests/../src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ require_en_utf8_locale_
+ path_prepend_ .
+ test 1 '!=' 0
+ path_dir_=.
+ case $path_dir_ in
+ abs_path_dir_=/sources/grep-3.1/tests/.
+ case $abs_path_dir_ in
+ PATH=/sources/grep-3.1/tests/.:/sources/grep-3.1/tests/../src:/sources/grep-3.1/src:./src:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
+ create_exe_shims_ /sources/grep-3.1/tests/.
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ case $(get-mb-cur-max en_US.UTF-8) in
++ get-mb-cur-max en_US.UTF-8
+ printf '1\n2\n'
+ fail=0
+ for locale in C en_US.UTF-8
+ for options in -qz -qzE
+ case $options in
+ parens='\(\)'
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qz 1.2 in
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qz '1.2\(\)\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qz '[12].2' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qz '[12].2\(\)\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qz '[1-2].2' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qz '[1-2].2\(\)\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qz '[1-2][^a][1-2]' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qz '[1-2][^a][1-2]\(\)\1' in
+ for options in -qz -qzE
+ case $options in
+ parens='()'
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qzE 1.2 in
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qzE '1.2()\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qzE '[12].2' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qzE '[12].2()\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qzE '[1-2].2' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qzE '[1-2].2()\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qzE '[1-2][^a][1-2]' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=C
+ grep -qzE '[1-2][^a][1-2]()\1' in
+ for locale in C en_US.UTF-8
+ for options in -qz -qzE
+ case $options in
+ parens='\(\)'
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qz 1.2 in
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qz '1.2\(\)\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qz '[12].2' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qz '[12].2\(\)\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qz '[1-2].2' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qz '[1-2].2\(\)\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qz '[1-2][^a][1-2]' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qz '[1-2][^a][1-2]\(\)\1' in
+ for options in -qz -qzE
+ case $options in
+ parens='()'
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qzE 1.2 in
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qzE '1.2()\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qzE '[12].2' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qzE '[12].2()\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qzE '[1-2].2' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qzE '[1-2].2()\1' in
+ for pattern in '1.2' '[12].2' '[1-2].2' '[1-2][^a][1-2]'
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qzE '[1-2][^a][1-2]' in
+ for suffix in '' "$parens\\1"
+ LC_ALL=en_US.UTF-8
+ grep -qzE '[1-2][^a][1-2]()\1' in
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ test '' = yes
+ cd /sources/grep-3.1/tests
+ chmod -R u+rwx /sources/grep-3.1/tests/gt-utf8-bracket.ZSex
+ rm -rf /sources/grep-3.1/tests/gt-utf8-bracket.ZSex
+ exit 0
PASS utf8-bracket (exit status: 0)
