++ initial_cwd_=/mnt/lfs/sources/coreutils-8.30
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /mnt/lfs/sources/coreutils-8.30 gt-same-file.sh.XXXX
+++ case $# in
+++ destdir_=/mnt/lfs/sources/coreutils-8.30
+++ template_=gt-same-file.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/mnt/lfs/sources/coreutils-8.30/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN
+++ case $d in
+++ :
+++ test -d /mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN
++++ ls -dgo /mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN
+++ perms='drwx------ 2 4096 Nov 26 23:40 /mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN'
+++ case $perms in
+++ :
+++ echo /mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN
+++ return
++ test_dir_=/mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN
++ cd /mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/mnt/lfs/sources/coreutils-8.30/./src
+ case $abs_path_dir_ in
+ PATH=/mnt/lfs/sources/coreutils-8.30/./src:/mnt/lfs/sources/coreutils-8.30/src:/tools/bin:/bin:/usr/bin:/sbin:/usr/sbin
+ create_exe_shims_ /mnt/lfs/sources/coreutils-8.30/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ cp
+ require_built_ cp
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env cp --version
cp (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund, David MacKenzie, and Jim Meyering.
+ unset CDPATH
+ VERSION_CONTROL=numbered
+ export VERSION_CONTROL
+ ln -s no-such dangling-slink
+ ln dangling-slink hard-link
+ hard_link_to_symlink_does_the_deref=no
+ rm -f no-such dangling-slink hard-link
+ test no = yes
+ remove_these_sed='/^ELIDE NO TEST OUTPUT/d'
+ exec
+ contents=XYZ
+ for args in 'foo symlink' 'symlink foo' 'foo foo' 'sl1 sl2' 'foo hardlink' 'hlsl sl2'
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp foo symlink
+ tr '\n' ' '
+ echo 1
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -d foo symlink
+ echo 1 -d
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -f foo symlink
+ tr '\n' ' '
+ echo 1 -f
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -df foo symlink
+ tr '\n' ' '
+ echo 1 -df
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp --rem foo symlink
+ tr '\n' ' '
+ echo 0 --rem
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink'
+ echo '(foo
symlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -b foo symlink
+ tr '\n' ' '
+ echo 0 -b
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink
symlink.~1~ -> foo'
+ echo '(foo
symlink
symlink.~1~ -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bd foo symlink
+ tr '\n' ' '
+ echo 0 -bd
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink
symlink.~1~ -> foo'
+ echo '(foo
symlink
symlink.~1~ -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -bf foo symlink
+ echo 0 -bf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink
symlink.~1~ -> foo'
+ echo '(foo
symlink
symlink.~1~ -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdf foo symlink
+ tr '\n' ' '
+ echo 0 -bdf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink
symlink.~1~ -> foo'
+ echo '(foo
symlink
symlink.~1~ -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -l foo symlink
+ tr '\n' ' '
+ echo 1 -l
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -dl foo symlink
+ tr '\n' ' '
+ echo 1 -dl
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ cp -fl foo symlink
+ sed 's/  *$//'
+ tr '\n' ' '
+ echo 0 -fl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink'
+ echo '(foo
symlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -dfl foo symlink
+ tr '\n' ' '
+ echo 0 -dfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink'
+ echo '(foo
symlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bl foo symlink
+ tr '\n' ' '
+ echo 0 -bl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink
symlink.~1~ -> foo'
+ echo '(foo
symlink
symlink.~1~ -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdl foo symlink
+ tr '\n' ' '
+ echo 0 -bdl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink
symlink.~1~ -> foo'
+ echo '(foo
symlink
symlink.~1~ -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bfl foo symlink
+ tr '\n' ' '
+ echo 0 -bfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink
symlink.~1~ -> foo'
+ echo '(foo
symlink
symlink.~1~ -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdfl foo symlink
+ tr '\n' ' '
+ echo 0 -bdfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink
symlink.~1~ -> foo'
+ echo '(foo
symlink
symlink.~1~ -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -s foo symlink
+ tr '\n' ' '
+ echo 1 -s
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -sf foo symlink
+ tr '\n' ' '
+ echo 0 -sf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ echo
+ cd ..
+ echo
+ for args in 'foo symlink' 'symlink foo' 'foo foo' 'sl1 sl2' 'foo hardlink' 'hlsl sl2'
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp symlink foo
+ tr '\n' ' '
+ echo 1
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -d symlink foo
+ tr '\n' ' '
+ echo 1 -d
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -f symlink foo
+ tr '\n' ' '
+ echo 1 -f
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -df symlink foo
+ tr '\n' ' '
+ echo 1 -df
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp --rem symlink foo
+ tr '\n' ' '
+ echo 1 --rem
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -b symlink foo
+ tr '\n' ' '
+ echo 1 -b
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bd symlink foo
+ tr '\n' ' '
+ echo 0 -bd
+ test -s _err
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
++ ls -gG --ignore=_err .
+ ls='foo -> foo
foo.~1~
symlink -> foo'
+ echo '(foo -> foo
foo.~1~
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ echo symlink-loop
+ for f in $args
+ test -f foo
+ echo symlink-loop
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -bf symlink foo
+ echo 1 -bf
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdf symlink foo
+ tr '\n' ' '
+ echo 0 -bdf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo -> foo
foo.~1~
symlink -> foo'
+ echo '(foo -> foo
foo.~1~
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ echo symlink-loop
+ for f in $args
+ test -f foo
+ echo symlink-loop
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -l symlink foo
+ tr '\n' ' '
+ echo 0 -l
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -dl symlink foo
+ tr '\n' ' '
+ echo 0 -dl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -fl symlink foo
+ tr '\n' ' '
+ echo 0 -fl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ continue
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bl symlink foo
+ tr '\n' ' '
+ echo 0 -bl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ continue
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bfl symlink foo
+ tr '\n' ' '
+ echo 0 -bfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ continue
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -s symlink foo
+ echo 1 -s
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ ln -s foo symlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ cp -sf symlink foo
+ sed 's/  *$//'
+ tr '\n' ' '
+ echo 1 -sf
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
++ ls -gG --ignore=_err .
+ ls='foo
symlink -> foo'
+ echo '(foo
symlink -> foo)'
+ for f in $args
+ test -f symlink
+ case "$(cat $f)" in
++ cat symlink
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ echo
+ for args in 'foo symlink' 'symlink foo' 'foo foo' 'sl1 sl2' 'foo hardlink' 'hlsl sl2'
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp foo foo
+ tr '\n' ' '
+ echo 1
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -d foo foo
+ tr '\n' ' '
+ echo 1 -d
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -f foo foo
+ tr '\n' ' '
+ echo 1 -f
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -df foo foo
+ echo 1 -df
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp --rem foo foo
+ tr '\n' ' '
+ echo 1 --rem
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -b foo foo
+ echo 1 -b
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bd foo foo
+ tr '\n' ' '
+ echo 1 -bd
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -bf foo foo
+ echo 0 -bf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
foo.~1~'
+ echo '(foo
foo.~1~)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdf foo foo
+ tr '\n' ' '
+ echo 0 -bdf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
foo.~1~'
+ echo '(foo
foo.~1~)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -l foo foo
+ tr '\n' ' '
+ echo 0 -l
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -dl foo foo
+ tr '\n' ' '
+ echo 0 -dl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -fl foo foo
+ tr '\n' ' '
+ echo 0 -fl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -dfl foo foo
+ tr '\n' ' '
+ echo 0 -dfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bl foo foo
+ tr '\n' ' '
+ echo 0 -bl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdl foo foo
+ tr '\n' ' '
+ echo 0 -bdl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ cp -bfl foo foo
+ sed 's/  *$//'
+ tr '\n' ' '
+ echo 0 -bfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
foo.~1~'
+ echo '(foo
foo.~1~)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdfl foo foo
+ tr '\n' ' '
+ echo 0 -bdfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
foo.~1~'
+ echo '(foo
foo.~1~)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -s foo foo
+ tr '\n' ' '
+ echo 1 -s
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -sf foo foo
+ tr '\n' ' '
+ echo 1 -sf
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls=foo
+ echo '(foo)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ echo
+ cd ..
+ echo
+ for args in 'foo symlink' 'symlink foo' 'foo foo' 'sl1 sl2' 'foo hardlink' 'hlsl sl2'
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp sl1 sl2
+ tr '\n' ' '
+ echo 1
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> foo'
+ echo '(foo
sl1 -> foo
sl2 -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -d sl1 sl2
+ tr '\n' ' '
+ echo 0 -d
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> foo'
+ echo '(foo
sl1 -> foo
sl2 -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -f sl1 sl2
+ tr '\n' ' '
+ echo 1 -f
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> foo'
+ echo '(foo
sl1 -> foo
sl2 -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -df sl1 sl2
+ tr '\n' ' '
+ echo 0 -df
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> foo'
+ echo '(foo
sl1 -> foo
sl2 -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp --rem sl1 sl2
+ tr '\n' ' '
+ echo 0 --rem
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2'
+ echo '(foo
sl1 -> foo
sl2)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -b sl1 sl2
+ tr '\n' ' '
+ echo 0 -b
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2
sl2.~1~ -> foo'
+ echo '(foo
sl1 -> foo
sl2
sl2.~1~ -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -bd sl1 sl2
+ tr '\n' ' '
+ echo 0 -bd
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> foo
sl2.~1~ -> foo'
+ echo '(foo
sl1 -> foo
sl2 -> foo
sl2.~1~ -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -bf sl1 sl2
+ tr '\n' ' '
+ echo 0 -bf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2
sl2.~1~ -> foo'
+ echo '(foo
sl1 -> foo
sl2
sl2.~1~ -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdf sl1 sl2
+ tr '\n' ' '
+ echo 0 -bdf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> foo
sl2.~1~ -> foo'
+ echo '(foo
sl1 -> foo
sl2 -> foo
sl2.~1~ -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -l sl1 sl2
+ tr '\n' ' '
+ echo 1 -l
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> foo'
+ echo '(foo
sl1 -> foo
sl2 -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ continue
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -fl sl1 sl2
+ tr '\n' ' '
+ echo 0 -fl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2'
+ echo '(foo
sl1 -> foo
sl2)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ continue
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -bl sl1 sl2
+ tr '\n' ' '
+ echo 0 -bl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2
sl2.~1~ -> foo'
+ echo '(foo
sl1 -> foo
sl2
sl2.~1~ -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ continue
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -bfl sl1 sl2
+ tr '\n' ' '
+ echo 0 -bfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2
sl2.~1~ -> foo'
+ echo '(foo
sl1 -> foo
sl2
sl2.~1~ -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ continue
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ sed 's/  *$//'
+ cp -s sl1 sl2
+ tr '\n' ' '
+ echo 1 -s
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> foo'
+ echo '(foo
sl1 -> foo
sl2 -> foo)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl1
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ cp -sf sl1 sl2
+ sed 's/  *$//'
+ tr '\n' ' '
+ echo 0 -sf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
sl1 -> foo
sl2 -> sl1'
+ echo '(foo
sl1 -> foo
sl2 -> sl1)'
+ for f in $args
+ test -f sl1
+ case "$(cat $f)" in
++ cat sl1
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ echo
+ for args in 'foo symlink' 'symlink foo' 'foo foo' 'sl1 sl2' 'foo hardlink' 'hlsl sl2'
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp foo hardlink
+ tr '\n' ' '
+ echo 1
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -d foo hardlink
+ echo 1 -d
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ cp -f foo hardlink
+ sed 's/  *$//'
+ tr '\n' ' '
+ echo 1 -f
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -df foo hardlink
+ tr '\n' ' '
+ echo 1 -df
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp --rem foo hardlink
+ echo 0 --rem
+ test -s _err
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
++ ls -gG --ignore=_err .
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -b foo hardlink
+ tr '\n' ' '
+ echo 0 -b
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink
hardlink.~1~'
+ echo '(foo
hardlink
hardlink.~1~)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bd foo hardlink
+ tr '\n' ' '
+ echo 0 -bd
+ test -s _err
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
++ ls -gG --ignore=_err .
+ ls='foo
hardlink
hardlink.~1~'
+ echo '(foo
hardlink
hardlink.~1~)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bf foo hardlink
+ tr '\n' ' '
+ echo 0 -bf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink
hardlink.~1~'
+ echo '(foo
hardlink
hardlink.~1~)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bdf foo hardlink
+ tr '\n' ' '
+ echo 0 -bdf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink
hardlink.~1~'
+ echo '(foo
hardlink
hardlink.~1~)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -l foo hardlink
+ tr '\n' ' '
+ echo 0 -l
+ test -s _err
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
++ ls -gG --ignore=_err .
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -dl foo hardlink
+ tr '\n' ' '
+ echo 0 -dl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -fl foo hardlink
+ tr '\n' ' '
+ echo 0 -fl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -dfl foo hardlink
+ tr '\n' ' '
+ echo 0 -dfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bl foo hardlink
+ tr '\n' ' '
+ echo 0 -bl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -bdl foo hardlink
+ echo 0 -bdl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -bfl foo hardlink
+ tr '\n' ' '
+ echo 0 -bfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -bdfl foo hardlink
+ echo 0 -bdfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -s foo hardlink
+ echo 1 -s
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
++ ls -gG --ignore=_err .
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ ln foo hardlink
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ sed 's/  *$//'
+ cp -sf foo hardlink
+ tr '\n' ' '
+ echo 1 -sf
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hardlink'
+ echo '(foo
hardlink)'
+ for f in $args
+ test -f foo
+ case "$(cat $f)" in
++ cat foo
+ for f in $args
+ test -f hardlink
+ case "$(cat $f)" in
++ cat hardlink
+ echo
+ cd ..
+ echo
+ for args in 'foo symlink' 'symlink foo' 'foo foo' 'sl1 sl2' 'foo hardlink' 'hlsl sl2'
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp hlsl sl2
+ tr '\n' ' '
+ echo 1
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -d hlsl sl2
+ echo 0 -d
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -f hlsl sl2
+ tr '\n' ' '
+ echo 1 -f
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -df hlsl sl2
+ tr '\n' ' '
+ echo 0 -df
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ cp --rem hlsl sl2
+ sed 's/  *$//'
+ tr '\n' ' '
+ echo 0 --rem
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2'
+ echo '(foo
hlsl -> foo
sl2)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -b hlsl sl2
+ tr '\n' ' '
+ echo 0 -b
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2
sl2.~1~ -> foo'
+ echo '(foo
hlsl -> foo
sl2
sl2.~1~ -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -bd hlsl sl2
+ tr '\n' ' '
+ echo 0 -bd
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo
sl2.~1~ -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo
sl2.~1~ -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -bf hlsl sl2
+ echo 0 -bf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2
sl2.~1~ -> foo'
+ echo '(foo
hlsl -> foo
sl2
sl2.~1~ -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ tr '\n' ' '
+ cp -bdf hlsl sl2
+ echo 0 -bdf
+ test -s _err
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
++ ls -gG --ignore=_err .
+ ls='foo
hlsl -> foo
sl2 -> foo
sl2.~1~ -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo
sl2.~1~ -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -l hlsl sl2
+ tr '\n' ' '
+ echo 1 -l
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -dl hlsl sl2
+ tr '\n' ' '
+ echo 0 -dl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -fl hlsl sl2
+ tr '\n' ' '
+ echo 0 -fl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2'
+ echo '(foo
hlsl -> foo
sl2)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -dfl hlsl sl2
+ tr '\n' ' '
+ echo 0 -dfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -bl hlsl sl2
+ tr '\n' ' '
+ echo 0 -bl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2
sl2.~1~ -> foo'
+ echo '(foo
hlsl -> foo
sl2
sl2.~1~ -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -bdl hlsl sl2
+ tr '\n' ' '
+ echo 0 -bdl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -bfl hlsl sl2
+ tr '\n' ' '
+ echo 0 -bfl
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2
sl2.~1~ -> foo'
+ echo '(foo
hlsl -> foo
sl2
sl2.~1~ -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -bdfl hlsl sl2
+ tr '\n' ' '
+ echo 0 -bdfl
+ test -s _err
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
++ ls -gG --ignore=_err .
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -s hlsl sl2
+ tr '\n' ' '
+ echo 1 -s
+ test -s _err
+ sed '
            s/symbolic link/symlink/
            s/^[^:]*:\([^:]*\).*/cp:\1/
            1s/^/[/
            $s/$/]/
          ' _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> foo'
+ echo '(foo
hlsl -> foo
sl2 -> foo)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ for options in '' -d -f -df --rem -b -bd -bf -bdf -l -dl -fl -dfl -bl -bdl -bfl -bdfl -s -sf
+ case $args$options in
+ case $hard_link_to_symlink_does_the_deref:$args:$options in
+ rm -rf dir
+ mkdir dir
+ cd dir
+ echo XYZ
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ case "$args" in
+ ln -s foo sl2
+ case "$args" in
+ ln sl2 hlsl
+ sed 's/  *$//'
+ cp -sf hlsl sl2
+ tr '\n' ' '
+ echo 0 -sf
+ test -s _err
++ ls -gG --ignore=_err .
++ sed -e '/^total /d' -e 's/^[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *[^ ]*  *//'
+ ls='foo
hlsl -> foo
sl2 -> hlsl'
+ echo '(foo
hlsl -> foo
sl2 -> hlsl)'
+ for f in $args
+ test -f hlsl
+ case "$(cat $f)" in
++ cat hlsl
+ for f in $args
+ test -f sl2
+ case "$(cat $f)" in
++ cat sl2
+ echo
+ cd ..
+ echo
+ cat
+ sed '/^ELIDE NO TEST OUTPUT/d'
+ exec
+ compare expected actual
+ compare_dev_null_ expected actual
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xactual = x/dev/null
+ return 2
+ case $? in
+ compare_ expected actual
+ diff -u expected actual
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ test '' = yes
+ cd /mnt/lfs/sources/coreutils-8.30
+ chmod -R u+rwx /mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN
+ rm -rf /mnt/lfs/sources/coreutils-8.30/gt-same-file.sh.lCwN
+ exit 0
PASS tests/cp/same-file.sh (exit status: 0)
