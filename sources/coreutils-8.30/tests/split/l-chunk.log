++ initial_cwd_=/sources/coreutils-8.30
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /sources/coreutils-8.30 gt-l-chunk.sh.XXXX
+++ case $# in
+++ destdir_=/sources/coreutils-8.30
+++ template_=gt-l-chunk.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/sources/coreutils-8.30/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/sources/coreutils-8.30/gt-l-chunk.sh.sFIr
+++ case $d in
+++ :
+++ test -d /sources/coreutils-8.30/gt-l-chunk.sh.sFIr
++++ ls -dgo /sources/coreutils-8.30/gt-l-chunk.sh.sFIr
+++ perms='drwx------ 2 4096 Nov 26 23:49 /sources/coreutils-8.30/gt-l-chunk.sh.sFIr'
+++ case $perms in
+++ :
+++ echo /sources/coreutils-8.30/gt-l-chunk.sh.sFIr
+++ return
++ test_dir_=/sources/coreutils-8.30/gt-l-chunk.sh.sFIr
++ cd /sources/coreutils-8.30/gt-l-chunk.sh.sFIr
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/sources/coreutils-8.30/./src
+ case $abs_path_dir_ in
+ PATH=/sources/coreutils-8.30/./src:/sources/coreutils-8.30/src:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
+ create_exe_shims_ /sources/coreutils-8.30/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ split
+ require_built_ split
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env split --version
split (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund and Richard M. Stallman.
+ echo 'split: invalid number of chunks: '\''1o'\'''
+ returns_ 1 split -n l/1o
+ compare exp err
+ compare_dev_null_ exp err
+ test 2 = 2
+ test xexp = x/dev/null
+ test xerr = x/dev/null
+ return 2
+ case $? in
+ compare_ exp err
+ diff -u exp err
+ echo 'split: -: cannot determine file size'
+ :
+ returns_ 1 split -n l/1
+ compare exp err
+ compare_dev_null_ exp err
+ test 2 = 2
+ test xexp = x/dev/null
+ test xerr = x/dev/null
+ return 2
+ case $? in
+ compare_ exp err
+ diff -u exp err
+ split -n l/10 /dev/null
++ uniq -c
++ stat -c %s xaa xab xac xad xae xaf xag xah xai xaj
++ sed 's/^ *//; s/ /x/'
+ test 10x0 = 10x0
+ rm xaa xab xac xad xae xaf xag xah xai xaj
+ returns_ 1 split -n l/2 /dev/zero
split: /dev/zero: cannot determine file size: Value too large for defined data type
+ rm 'x??'
rm: cannot remove 'x??': No such file or directory
+ returns_ 1 split -n 1/2 /dev/zero
split: /dev/zero: cannot determine file size: Value too large for defined data type
+ rm 'x??'
rm: cannot remove 'x??': No such file or directory
+ split -e -n l/10 /dev/null
+ returns_ 1 stat 'x??'
+ lines=12345~1~12345~1~12345~1~12345~1~12345~~~12345~1~12345~1~12345~1~12345~1~12345~1~
+ printf %s 12345~1~12345~1~12345~1~12345~1~12345~~~12345~1~12345~1~12345~1~12345~1~12345~1~
+ tr '~' '\n'
+ echo 'split: invalid chunk number: '\''16'\'''
+ returns_ 1 split -n l/16/15 in
+ sed 's/'\'': .*/'\''/'
+ compare exp err
+ compare_dev_null_ exp err
+ test 2 = 2
+ test xexp = x/dev/null
+ test xerr = x/dev/null
+ return 2
+ case $? in
+ compare_ exp err
+ diff -u exp err
+ printf %s '14 16 09 15 16 10
14 08 08 10 14 08 08 10
06 08 08 02 06 08 08 02 06 08 08 10
06 08 02 06 08 00 08 02 06 08 02 06 08 00 10
06 00 08 00 02 06 00 02 06 00 08 00 01 07 00 02 06 00 08 00 02 16
'
+ sed 's/00 *//g' exp
+ DEBUGGING=
+ test ''
+ for ELIDE_EMPTY in '' '-e'
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f 'x*'
+ test -z ''
+ split ---io-blksize=1 -n l/2/6 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=1 -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z ''
+ split ---io-blksize=1 -n l/2/8 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=1 -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z ''
+ split ---io-blksize=1 -n l/2/12 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=1 -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z ''
+ split ---io-blksize=1 -n l/2/15 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=1 -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ echo 06 08 02 06 08 00 08 02 06 08 02 06 08 00 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ test -z ''
+ split ---io-blksize=1 -n l/2/22 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=1 -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ echo 06 00 08 00 02 06 00 02 06 00 08 00 01 07 00 02 06 00 08 00 02 16
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ test -z ''
+ EXP=exp
+ compare out exp
+ compare_dev_null_ out exp
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp
+ diff -u out exp
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ test -z ''
+ split ---io-blksize=2 -n l/2/6 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=2 -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z ''
+ split ---io-blksize=2 -n l/2/8 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=2 -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z ''
+ split ---io-blksize=2 -n l/2/12 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=2 -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z ''
+ split ---io-blksize=2 -n l/2/15 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=2 -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ echo 06 08 02 06 08 00 08 02 06 08 02 06 08 00 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ test -z ''
+ split ---io-blksize=2 -n l/2/22 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=2 -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ echo 06 00 08 00 02 06 00 02 06 00 08 00 01 07 00 02 06 00 08 00 02 16
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ test -z ''
+ EXP=exp
+ compare out exp
+ compare_dev_null_ out exp
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp
+ diff -u out exp
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ test -z ''
+ split ---io-blksize=5 -n l/2/6 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=5 -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z ''
+ split ---io-blksize=5 -n l/2/8 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=5 -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z ''
+ split ---io-blksize=5 -n l/2/12 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=5 -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z ''
+ split ---io-blksize=5 -n l/2/15 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=5 -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ echo 06 08 02 06 08 00 08 02 06 08 02 06 08 00 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ test -z ''
+ split ---io-blksize=5 -n l/2/22 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=5 -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ echo 06 00 08 00 02 06 00 02 06 00 08 00 01 07 00 02 06 00 08 00 02 16
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ test -z ''
+ EXP=exp
+ compare out exp
+ compare_dev_null_ out exp
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp
+ diff -u out exp
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ test -z ''
+ split ---io-blksize=10 -n l/2/6 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=10 -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z ''
+ split ---io-blksize=10 -n l/2/8 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=10 -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z ''
+ split ---io-blksize=10 -n l/2/12 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=10 -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z ''
+ split ---io-blksize=10 -n l/2/15 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=10 -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ echo 06 08 02 06 08 00 08 02 06 08 02 06 08 00 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ test -z ''
+ split ---io-blksize=10 -n l/2/22 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=10 -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ echo 06 00 08 00 02 06 00 02 06 00 08 00 01 07 00 02 06 00 08 00 02 16
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ test -z ''
+ EXP=exp
+ compare out exp
+ compare_dev_null_ out exp
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp
+ diff -u out exp
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ test -z ''
+ split ---io-blksize=80 -n l/2/6 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=80 -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z ''
+ split ---io-blksize=80 -n l/2/8 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=80 -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z ''
+ split ---io-blksize=80 -n l/2/12 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=80 -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z ''
+ split ---io-blksize=80 -n l/2/15 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=80 -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ echo 06 08 02 06 08 00 08 02 06 08 02 06 08 00 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ test -z ''
+ split ---io-blksize=80 -n l/2/22 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=80 -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ echo 06 00 08 00 02 06 00 02 06 00 08 00 01 07 00 02 06 00 08 00 02 16
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ test -z ''
+ EXP=exp
+ compare out exp
+ compare_dev_null_ out exp
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp
+ diff -u out exp
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ test -z ''
+ split ---io-blksize=100 -n l/2/6 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=100 -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z ''
+ split ---io-blksize=100 -n l/2/8 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=100 -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z ''
+ split ---io-blksize=100 -n l/2/12 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=100 -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z ''
+ split ---io-blksize=100 -n l/2/15 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=100 -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ echo 06 08 02 06 08 00 08 02 06 08 02 06 08 00 10
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao
+ test -z ''
+ split ---io-blksize=100 -n l/2/22 in
+ returns_ 1 stat 'x*'
+ split ---io-blksize=100 -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ echo 06 00 08 00 02 06 00 02 06 00 08 00 01 07 00 02 06 00 08 00 02 16
+ test -z ''
+ compare chunk.k xab
+ compare_dev_null_ chunk.k xab
+ test 2 = 2
+ test xchunk.k = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ chunk.k xab
+ diff -u chunk.k xab
+ test ''
+ test -z ''
+ EXP=exp
+ compare out exp
+ compare_dev_null_ out exp
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp
+ diff -u out exp
+ for ELIDE_EMPTY in '' '-e'
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan xao xap xaq xar xas xat xau xav
+ test -z -e
+ split ---io-blksize=1 -e -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z -e
+ split ---io-blksize=1 -e -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z -e
+ split ---io-blksize=1 -e -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z -e
+ split ---io-blksize=1 -e -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ echo 06 08 02 06 08 08 02 06 08 02 06 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ test -z -e
+ split ---io-blksize=1 -e -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ echo 06 08 02 06 02 06 08 01 07 02 06 08 02 16
+ test -z -e
+ test ''
+ test -z -e
+ EXP=exp.elide_empty
+ compare out exp.elide_empty
+ compare_dev_null_ out exp.elide_empty
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp.elide_empty = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp.elide_empty
+ diff -u out exp.elide_empty
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ test -z -e
+ split ---io-blksize=2 -e -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z -e
+ split ---io-blksize=2 -e -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z -e
+ split ---io-blksize=2 -e -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z -e
+ split ---io-blksize=2 -e -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ echo 06 08 02 06 08 08 02 06 08 02 06 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ test -z -e
+ split ---io-blksize=2 -e -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ echo 06 08 02 06 02 06 08 01 07 02 06 08 02 16
+ test -z -e
+ test ''
+ test -z -e
+ EXP=exp.elide_empty
+ compare out exp.elide_empty
+ compare_dev_null_ out exp.elide_empty
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp.elide_empty = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp.elide_empty
+ diff -u out exp.elide_empty
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ test -z -e
+ split ---io-blksize=5 -e -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z -e
+ split ---io-blksize=5 -e -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z -e
+ split ---io-blksize=5 -e -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z -e
+ split ---io-blksize=5 -e -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ echo 06 08 02 06 08 08 02 06 08 02 06 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ test -z -e
+ split ---io-blksize=5 -e -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ echo 06 08 02 06 02 06 08 01 07 02 06 08 02 16
+ test -z -e
+ test ''
+ test -z -e
+ EXP=exp.elide_empty
+ compare out exp.elide_empty
+ compare_dev_null_ out exp.elide_empty
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp.elide_empty = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp.elide_empty
+ diff -u out exp.elide_empty
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ test -z -e
+ split ---io-blksize=10 -e -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z -e
+ split ---io-blksize=10 -e -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z -e
+ split ---io-blksize=10 -e -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z -e
+ split ---io-blksize=10 -e -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ echo 06 08 02 06 08 08 02 06 08 02 06 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ test -z -e
+ split ---io-blksize=10 -e -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ echo 06 08 02 06 02 06 08 01 07 02 06 08 02 16
+ test -z -e
+ test ''
+ test -z -e
+ EXP=exp.elide_empty
+ compare out exp.elide_empty
+ compare_dev_null_ out exp.elide_empty
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp.elide_empty = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp.elide_empty
+ diff -u out exp.elide_empty
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ test -z -e
+ split ---io-blksize=80 -e -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z -e
+ split ---io-blksize=80 -e -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z -e
+ split ---io-blksize=80 -e -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z -e
+ split ---io-blksize=80 -e -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ echo 06 08 02 06 08 08 02 06 08 02 06 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ test -z -e
+ split ---io-blksize=80 -e -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ echo 06 08 02 06 02 06 08 01 07 02 06 08 02 16
+ test -z -e
+ test ''
+ test -z -e
+ EXP=exp.elide_empty
+ compare out exp.elide_empty
+ compare_dev_null_ out exp.elide_empty
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp.elide_empty = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp.elide_empty
+ diff -u out exp.elide_empty
+ for IO_BLKSIZE in 1 2 5 10 80 100
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ test -z -e
+ split ---io-blksize=100 -e -n l/6 in
++ stat -c %02s xaa xab xac xad xae xaf
+ echo 14 16 09 15 16 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf
+ test -z -e
+ split ---io-blksize=100 -e -n l/8 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah
+ echo 14 08 08 10 14 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah
+ test -z -e
+ split ---io-blksize=100 -e -n l/12 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ echo 06 08 08 02 06 08 08 02 06 08 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal
+ test -z -e
+ split ---io-blksize=100 -e -n l/15 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ echo 06 08 02 06 08 08 02 06 08 02 06 08 10
+ test -z -e
+ test ''
+ for N in 6 8 12 15 22
+ rm -f xaa xab xac xad xae xaf xag xah xai xaj xak xal xam
+ test -z -e
+ split ---io-blksize=100 -e -n l/22 in
++ stat -c %02s xaa xab xac xad xae xaf xag xah xai xaj xak xal xam xan
+ echo 06 08 02 06 02 06 08 01 07 02 06 08 02 16
+ test -z -e
+ test ''
+ test -z -e
+ EXP=exp.elide_empty
+ compare out exp.elide_empty
+ compare_dev_null_ out exp.elide_empty
+ test 2 = 2
+ test xout = x/dev/null
+ test xexp.elide_empty = x/dev/null
+ return 2
+ case $? in
+ compare_ out exp.elide_empty
+ diff -u out exp.elide_empty
+ test ''
+ printf '1\n12345\n'
+ split -n l/13/15 in
+ compare exp out
+ compare_dev_null_ exp out
+ test 2 = 2
+ test xexp = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ exp out
+ diff -u exp out
+ printf ''
+ split -n l/14/15 in
+ compare exp out
+ compare_dev_null_ exp out
+ test 2 = 2
+ test xexp = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ exp out
+ diff -u exp out
+ printf '1\n12345\n1\n'
+ split -n l/15/15 in
+ compare exp out
+ compare_dev_null_ exp out
+ test 2 = 2
+ test xexp = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ exp out
+ diff -u exp out
+ printf '12\n34\n5'
+ printf 5
+ split -n l/7/7 in
+ compare exp out
+ compare_dev_null_ exp out
+ test 2 = 2
+ test xexp = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ exp out
+ diff -u exp out
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ test '' = yes
+ cd /sources/coreutils-8.30
+ chmod -R u+rwx /sources/coreutils-8.30/gt-l-chunk.sh.sFIr
+ rm -rf /sources/coreutils-8.30/gt-l-chunk.sh.sFIr
+ exit 0
PASS tests/split/l-chunk.sh (exit status: 0)
