++ initial_cwd_=/sources/coreutils-8.30
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /sources/coreutils-8.30 gt-numeric.sh.XXXX
+++ case $# in
+++ destdir_=/sources/coreutils-8.30
+++ template_=gt-numeric.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/sources/coreutils-8.30/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/sources/coreutils-8.30/gt-numeric.sh.cOyj
+++ case $d in
+++ :
+++ test -d /sources/coreutils-8.30/gt-numeric.sh.cOyj
++++ ls -dgo /sources/coreutils-8.30/gt-numeric.sh.cOyj
+++ perms='drwx------ 2 4096 Nov 26 23:49 /sources/coreutils-8.30/gt-numeric.sh.cOyj'
+++ case $perms in
+++ :
+++ echo /sources/coreutils-8.30/gt-numeric.sh.cOyj
+++ return
++ test_dir_=/sources/coreutils-8.30/gt-numeric.sh.cOyj
++ cd /sources/coreutils-8.30/gt-numeric.sh.cOyj
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/sources/coreutils-8.30/./src
+ case $abs_path_dir_ in
+ PATH=/sources/coreutils-8.30/./src:/sources/coreutils-8.30/src:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
+ create_exe_shims_ /sources/coreutils-8.30/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ split
+ require_built_ split
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env split --version
split (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund and Richard M. Stallman.
+ printf '1\n2\n3\n4\n5\n'
+ printf '%s\n' 1 2
+ printf '%s\n' 3 4
+ printf '%s\n' 5
+ for mode in 'numeric' 'hex'
+ for start in 0 9
+ mode_option=--numeric-suffixes
+ test 0 '!=' 0
+ split --numeric-suffixes --lines=2 in
+ test numeric = hex
+ format=d
++ seq 0 2
+ for i in $(seq $start $(($start+2)))
++ printf %02d 0
+ compare exp-0 x00
+ compare_dev_null_ exp-0 x00
+ test 2 = 2
+ test xexp-0 = x/dev/null
+ test xx00 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-0 x00
+ diff -u exp-0 x00
+ for i in $(seq $start $(($start+2)))
++ printf %02d 1
+ compare exp-1 x01
+ compare_dev_null_ exp-1 x01
+ test 2 = 2
+ test xexp-1 = x/dev/null
+ test xx01 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-1 x01
+ diff -u exp-1 x01
+ for i in $(seq $start $(($start+2)))
++ printf %02d 2
+ compare exp-2 x02
+ compare_dev_null_ exp-2 x02
+ test 2 = 2
+ test xexp-2 = x/dev/null
+ test xx02 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-2 x02
+ diff -u exp-2 x02
+ for start in 0 9
+ mode_option=--numeric-suffixes
+ test 9 '!=' 0
+ mode_option=--numeric-suffixes=9
+ split --numeric-suffixes=9 --lines=2 in
+ test numeric = hex
+ format=d
++ seq 9 11
+ for i in $(seq $start $(($start+2)))
++ printf %02d 9
+ compare exp-0 x09
+ compare_dev_null_ exp-0 x09
+ test 2 = 2
+ test xexp-0 = x/dev/null
+ test xx09 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-0 x09
+ diff -u exp-0 x09
+ for i in $(seq $start $(($start+2)))
++ printf %02d 10
+ compare exp-1 x10
+ compare_dev_null_ exp-1 x10
+ test 2 = 2
+ test xexp-1 = x/dev/null
+ test xx10 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-1 x10
+ diff -u exp-1 x10
+ for i in $(seq $start $(($start+2)))
++ printf %02d 11
+ compare exp-2 x11
+ compare_dev_null_ exp-2 x11
+ test 2 = 2
+ test xexp-2 = x/dev/null
+ test xx11 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-2 x11
+ diff -u exp-2 x11
+ returns_ 1 split -a 3 --numeric-suffixes=1000 in
+ returns_ 1 split --numeric-suffixes=-1 in
+ returns_ 1 split --numeric-suffixes=one in
+ for mode in 'numeric' 'hex'
+ for start in 0 9
+ mode_option=--hex-suffixes
+ test 0 '!=' 0
+ split --hex-suffixes --lines=2 in
+ test hex = hex
+ format=x
++ seq 0 2
+ for i in $(seq $start $(($start+2)))
++ printf %02x 0
+ compare exp-0 x00
+ compare_dev_null_ exp-0 x00
+ test 2 = 2
+ test xexp-0 = x/dev/null
+ test xx00 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-0 x00
+ diff -u exp-0 x00
+ for i in $(seq $start $(($start+2)))
++ printf %02x 1
+ compare exp-1 x01
+ compare_dev_null_ exp-1 x01
+ test 2 = 2
+ test xexp-1 = x/dev/null
+ test xx01 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-1 x01
+ diff -u exp-1 x01
+ for i in $(seq $start $(($start+2)))
++ printf %02x 2
+ compare exp-2 x02
+ compare_dev_null_ exp-2 x02
+ test 2 = 2
+ test xexp-2 = x/dev/null
+ test xx02 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-2 x02
+ diff -u exp-2 x02
+ for start in 0 9
+ mode_option=--hex-suffixes
+ test 9 '!=' 0
+ mode_option=--hex-suffixes=9
+ split --hex-suffixes=9 --lines=2 in
+ test hex = hex
+ format=x
++ seq 9 11
+ for i in $(seq $start $(($start+2)))
++ printf %02x 9
+ compare exp-0 x09
+ compare_dev_null_ exp-0 x09
+ test 2 = 2
+ test xexp-0 = x/dev/null
+ test xx09 = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-0 x09
+ diff -u exp-0 x09
+ for i in $(seq $start $(($start+2)))
++ printf %02x 10
+ compare exp-1 x0a
+ compare_dev_null_ exp-1 x0a
+ test 2 = 2
+ test xexp-1 = x/dev/null
+ test xx0a = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-1 x0a
+ diff -u exp-1 x0a
+ for i in $(seq $start $(($start+2)))
++ printf %02x 11
+ compare exp-2 x0b
+ compare_dev_null_ exp-2 x0b
+ test 2 = 2
+ test xexp-2 = x/dev/null
+ test xx0b = x/dev/null
+ return 2
+ case $? in
+ compare_ exp-2 x0b
+ diff -u exp-2 x0b
+ returns_ 1 split -a 3 --hex-suffixes=1000 in
+ returns_ 1 split --hex-suffixes=-1 in
+ returns_ 1 split --hex-suffixes=one in
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ test '' = yes
+ cd /sources/coreutils-8.30
+ chmod -R u+rwx /sources/coreutils-8.30/gt-numeric.sh.cOyj
+ rm -rf /sources/coreutils-8.30/gt-numeric.sh.cOyj
+ exit 0
PASS tests/split/numeric.sh (exit status: 0)
