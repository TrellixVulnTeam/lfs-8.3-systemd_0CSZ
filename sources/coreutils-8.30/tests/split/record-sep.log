++ initial_cwd_=/sources/coreutils-8.30
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /sources/coreutils-8.30 gt-record-sep.sh.XXXX
+++ case $# in
+++ destdir_=/sources/coreutils-8.30
+++ template_=gt-record-sep.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/sources/coreutils-8.30/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/sources/coreutils-8.30/gt-record-sep.sh.T0xh
+++ case $d in
+++ :
+++ test -d /sources/coreutils-8.30/gt-record-sep.sh.T0xh
++++ ls -dgo /sources/coreutils-8.30/gt-record-sep.sh.T0xh
+++ perms='drwx------ 2 4096 Nov 26 23:49 /sources/coreutils-8.30/gt-record-sep.sh.T0xh'
+++ case $perms in
+++ :
+++ echo /sources/coreutils-8.30/gt-record-sep.sh.T0xh
+++ return
++ test_dir_=/sources/coreutils-8.30/gt-record-sep.sh.T0xh
++ cd /sources/coreutils-8.30/gt-record-sep.sh.T0xh
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/sources/coreutils-8.30/./src
+ case $abs_path_dir_ in
+ PATH=/sources/coreutils-8.30/./src:/sources/coreutils-8.30/src:/bin:/usr/bin:/sbin:/usr/sbin:/tools/bin
+ create_exe_shims_ /sources/coreutils-8.30/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ split
+ require_built_ split
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env split --version
split (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Torbjorn Granlund and Richard M. Stallman.
+ NL='
'
+ for sep in "$NL" '\0' ':'
+ test '
' = '
'
+ tr='\n'
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --lines=2 in
+ tr '\n' '\n'
+ tr '\n' '\n'
+ tr '\n' '\n'
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' '\n'
+ split --lines=2 -t '
' in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --line-bytes=4 in
+ tr '\n' '\n'
+ tr '\n' '\n'
+ tr '\n' '\n'
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' '\n'
+ split --line-bytes=4 -t '
' in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --number=l/3 in
+ tr '\n' '\n'
+ tr '\n' '\n'
+ tr '\n' '\n'
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' '\n'
+ split --number=l/3 -t '
' in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --number=r/3 in
+ tr '\n' '\n'
+ tr '\n' '\n'
+ tr '\n' '\n'
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' '\n'
+ split --number=r/3 -t '
' in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for sep in "$NL" '\0' ':'
+ test '\0' = '
'
+ tr='\0'
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --lines=2 in
+ tr '\n' '\0'
+ tr '\n' '\0'
+ tr '\n' '\0'
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' '\0'
+ split --lines=2 -t '\0' in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --line-bytes=4 in
+ tr '\n' '\0'
+ tr '\n' '\0'
+ tr '\n' '\0'
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' '\0'
+ split --line-bytes=4 -t '\0' in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --number=l/3 in
+ tr '\n' '\0'
+ tr '\n' '\0'
+ tr '\n' '\0'
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' '\0'
+ split --number=l/3 -t '\0' in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --number=r/3 in
+ tr '\n' '\0'
+ tr '\n' '\0'
+ tr '\n' '\0'
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' '\0'
+ split --number=r/3 -t '\0' in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for sep in "$NL" '\0' ':'
+ test : = '
'
+ tr=:
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --lines=2 in
+ tr '\n' :
+ tr '\n' :
+ tr '\n' :
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' :
+ split --lines=2 -t : in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --line-bytes=4 in
+ tr '\n' :
+ tr '\n' :
+ tr '\n' :
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' :
+ split --line-bytes=4 -t : in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --number=l/3 in
+ tr '\n' :
+ tr '\n' :
+ tr '\n' :
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' :
+ split --number=l/3 -t : in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ for mode in '--lines=2' '--line-bytes=4' '--number=l/3' '--number=r/3'
+ printf '1\n2\n3\n4\n5\n'
+ split --number=r/3 in
+ tr '\n' :
+ tr '\n' :
+ tr '\n' :
+ rm -f xaa xab xac
+ printf '1\n2\n3\n4\n5\n'
+ tr '\n' :
+ split --number=r/3 -t : in
+ compare exp1 xaa
+ compare_dev_null_ exp1 xaa
+ test 2 = 2
+ test xexp1 = x/dev/null
+ test xxaa = x/dev/null
+ return 2
+ case $? in
+ compare_ exp1 xaa
+ diff -u exp1 xaa
+ compare exp2 xab
+ compare_dev_null_ exp2 xab
+ test 2 = 2
+ test xexp2 = x/dev/null
+ test xxab = x/dev/null
+ return 2
+ case $? in
+ compare_ exp2 xab
+ diff -u exp2 xab
+ compare exp3 xac
+ compare_dev_null_ exp3 xac
+ test 2 = 2
+ test xexp3 = x/dev/null
+ test xxac = x/dev/null
+ return 2
+ case $? in
+ compare_ exp3 xac
+ diff -u exp3 xac
+ test -f xad
+ returns_ 1 split -t
split: option requires an argument -- 't'
Try 'split --help' for more information.
+ returns_ 1 split -txx
split: multi-character separator 'xx'
+ returns_ 1 split -ta -tb
split: multiple separator characters specified
+ returns_ 1 split '-t
' -tb
split: multiple separator characters specified
+ split -t: -t:
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ test '' = yes
+ cd /sources/coreutils-8.30
+ chmod -R u+rwx /sources/coreutils-8.30/gt-record-sep.sh.T0xh
+ rm -rf /sources/coreutils-8.30/gt-record-sep.sh.T0xh
+ exit 0
PASS tests/split/record-sep.sh (exit status: 0)
