++ initial_cwd_=/mnt/lfs/sources/coreutils-8.30
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /mnt/lfs/sources/coreutils-8.30 gt-retry.sh.XXXX
+++ case $# in
+++ destdir_=/mnt/lfs/sources/coreutils-8.30
+++ template_=gt-retry.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/mnt/lfs/sources/coreutils-8.30/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD
+++ case $d in
+++ :
+++ test -d /mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD
++++ ls -dgo /mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD
+++ perms='drwx------ 2 4096 Nov 26 23:39 /mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD'
+++ case $perms in
+++ :
+++ echo /mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD
+++ return
++ test_dir_=/mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD
++ cd /mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/mnt/lfs/sources/coreutils-8.30/./src
+ case $abs_path_dir_ in
+ PATH=/mnt/lfs/sources/coreutils-8.30/./src:/mnt/lfs/sources/coreutils-8.30/src:/tools/bin:/bin:/usr/bin:/sbin:/usr/sbin
+ create_exe_shims_ /mnt/lfs/sources/coreutils-8.30/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ fastpoll='-s.1 --max-unchanged-stats=1'
+ touch file
+ tail --retry file
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 1 = 1 ']'
+ grep -F 'tail: warning: --retry ignored' out
tail: warning: --retry ignored; --retry is useful only when following
+ returns_ 1 tail --retry missing
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'tail: warning: --retry ignored' out
tail: warning: --retry ignored; --retry is useful only when following
+ for mode in '' '---disable-inotify'
+ pid=30902
+ retry_delay_ wait4lines_ .1 6 1
+ local test_func=wait4lines_
+ local init_delay=.1
+ timeout 10 tail -s.1 --max-unchanged-stats=1 --follow=name --retry missing
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 1
+ local delay=0.1
+ local elc=1
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 1 -ge 1 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ echo X
+ retry_delay_ wait4lines_ .1 6 3
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 3
+ local delay=0.1
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 1 -ge 3 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 3
+ local delay=0.2
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 3 ']'
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 6
++ gawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ wait4lines_ 0.4 3
+ local delay=0.4
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 -ge 3 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 30902
+ wait 30902
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 = 3 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'has appeared' out
tail: 'missing' has appeared;  following new file
+ grep '^X$' out
X
+ rm -f missing out
+ pid=30933
+ retry_delay_ wait4lines_ .1 6 2
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
+ timeout 10 tail -s.1 --max-unchanged-stats=1 --follow=descriptor --retry missing
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ echo X1
+ retry_delay_ wait4lines_ .1 6 4
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 4
+ local delay=0.1
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 4 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 4
+ local delay=0.2
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 -ge 4 ']'
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 6
++ gawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ wait4lines_ 0.4 4
+ local delay=0.4
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 -ge 4 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ echo X
+ retry_delay_ wait4lines_ .1 6 6
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 6
+ local delay=0.1
+ local elc=6
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 -ge 6 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 6
+ local delay=0.2
+ local elc=6
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 6 -ge 6 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 30933
+ wait 30933
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 6 = 6 ']'
+ grep -F 'retry only effective for the initial open' out
tail: warning: --retry only effective for the initial open
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'has appeared' out
tail: 'missing' has appeared;  following new file
+ grep '^X1$' out
X1
+ grep -F 'file truncated' out
tail: missing: file truncated
+ grep '^X$' out
X
+ rm -f missing out
+ pid=30978
+ retry_delay_ wait4lines_ .1 6 2
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
+ timeout 10 tail -s.1 --max-unchanged-stats=1 --follow=descriptor --retry missing
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ mkdir missing
+ retry_delay_ wait4lines_ .1 6 4
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 4
+ local delay=0.1
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 4 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 4
+ local delay=0.2
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 -ge 4 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ wait 30978
+ rc=1
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 = 4 ']'
+ grep -F 'retry only effective for the initial open' out
tail: warning: --retry only effective for the initial open
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'replaced with an untailable file' out
tail: 'missing' has been replaced with an untailable file; giving up on this name
+ grep -F 'no files remaining' out
tail: no files remaining
+ '[' 1 = 1 ']'
+ rm -fd missing out
+ touch existing
+ pid=31005
+ retry_delay_ wait4lines_ .1 6 2
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
+ tail -s.1 --max-unchanged-stats=1 --follow=descriptor missing existing
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ echo Y
+ echo X
+ retry_delay_ wait4lines_ .1 6 3
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 3
+ local delay=0.1
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 3 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 3
+ local delay=0.2
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 -ge 3 ']'
+ time_fail=0
+ break
+ test 0 = 0
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 = 3 ']'
+ grep '^X$' out
X
+ grep '^Y$' out
+ cleanup_
+ kill 31005
+ wait 31005
+ rm -f missing out existing
+ returns_ 1 tail --follow=descriptor missing
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'no files remaining' out
tail: no files remaining
+ rm -f out
+ returns_ 1 tail --follow=name missing
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'no files remaining' out
tail: no files remaining
+ rm -f out
+ cat .
cat: .: Is a directory
+ mkdir untailable
+ pid=31047
+ retry_delay_ wait4lines_ .1 6 2
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
+ timeout 10 tail -s.1 --max-unchanged-stats=1 -F untailable
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ rmdir untailable
+ echo foo
+ retry_delay_ wait4lines_ .1 6 4
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 4
+ local delay=0.1
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 4 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 4
+ local delay=0.2
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 -ge 4 ']'
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 6
++ gawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ wait4lines_ 0.4 4
+ local delay=0.4
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 -ge 4 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 31047
+ wait 31047
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 = 4 ']'
+ grep -F 'cannot follow' out
tail: untailable: cannot follow end of this type of file
+ grep -E 'become accessible|has appeared' out
tail: 'untailable' has become accessible
+ grep -F 'giving up' out
+ grep -F foo out
foo
+ rm -fd untailable out
+ for mode in '' '---disable-inotify'
+ pid=31080
+ retry_delay_ wait4lines_ .1 6 1
+ timeout 10 tail ---disable-inotify -s.1 --max-unchanged-stats=1 --follow=name --retry missing
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 1
+ local delay=0.1
+ local elc=1
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 1 -ge 1 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ echo X
+ retry_delay_ wait4lines_ .1 6 3
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 3
+ local delay=0.1
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 1 -ge 3 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 3
+ local delay=0.2
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 3 ']'
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 6
++ gawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ wait4lines_ 0.4 3
+ local delay=0.4
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 -ge 3 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 31080
+ wait 31080
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 = 3 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'has appeared' out
tail: 'missing' has appeared;  following new file
+ grep '^X$' out
X
+ rm -f missing out
+ pid=31111
+ retry_delay_ wait4lines_ .1 6 2
+ timeout 10 tail ---disable-inotify -s.1 --max-unchanged-stats=1 --follow=descriptor --retry missing
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ echo X1
+ retry_delay_ wait4lines_ .1 6 4
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 4
+ local delay=0.1
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 4 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 4
+ local delay=0.2
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 -ge 4 ']'
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 6
++ gawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ wait4lines_ 0.4 4
+ local delay=0.4
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 -ge 4 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ echo X
+ retry_delay_ wait4lines_ .1 6 6
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 6
+ local delay=0.1
+ local elc=6
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 -ge 6 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 6
+ local delay=0.2
+ local elc=6
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 6 -ge 6 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 31111
+ wait 31111
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 6 = 6 ']'
+ grep -F 'retry only effective for the initial open' out
tail: warning: --retry only effective for the initial open
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'has appeared' out
tail: 'missing' has appeared;  following new file
+ grep '^X1$' out
X1
+ grep -F 'file truncated' out
tail: missing: file truncated
+ grep '^X$' out
X
+ rm -f missing out
+ pid=31156
+ retry_delay_ wait4lines_ .1 6 2
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
+ timeout 10 tail ---disable-inotify -s.1 --max-unchanged-stats=1 --follow=descriptor --retry missing
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ mkdir missing
+ retry_delay_ wait4lines_ .1 6 4
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 4
+ local delay=0.1
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 4 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 4
+ local delay=0.2
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 -ge 4 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ wait 31156
+ rc=1
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 = 4 ']'
+ grep -F 'retry only effective for the initial open' out
tail: warning: --retry only effective for the initial open
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'replaced with an untailable file' out
tail: 'missing' has been replaced with an untailable file; giving up on this name
+ grep -F 'no files remaining' out
tail: no files remaining
+ '[' 1 = 1 ']'
+ rm -fd missing out
+ touch existing
+ pid=31183
+ retry_delay_ wait4lines_ .1 6 2
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
+ tail ---disable-inotify -s.1 --max-unchanged-stats=1 --follow=descriptor missing existing
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ echo Y
+ echo X
+ retry_delay_ wait4lines_ .1 6 3
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 3
+ local delay=0.1
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 3 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 3
+ local delay=0.2
+ local elc=3
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 -ge 3 ']'
+ time_fail=0
+ break
+ test 0 = 0
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 = 3 ']'
+ grep '^X$' out
X
+ grep '^Y$' out
+ cleanup_
+ kill 31183
+ wait 31183
+ rm -f missing out existing
+ returns_ 1 tail ---disable-inotify --follow=descriptor missing
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'no files remaining' out
tail: no files remaining
+ rm -f out
+ returns_ 1 tail ---disable-inotify --follow=name missing
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 = 2 ']'
+ grep -F 'cannot open' out
tail: cannot open 'missing' for reading: No such file or directory
+ grep -F 'no files remaining' out
tail: no files remaining
+ rm -f out
+ cat .
cat: .: Is a directory
+ mkdir untailable
+ pid=31225
+ retry_delay_ wait4lines_ .1 6 2
+ timeout 10 tail ---disable-inotify -s.1 --max-unchanged-stats=1 -F untailable
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 2
+ local delay=0.1
+ local elc=2
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 2 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ rmdir untailable
+ echo foo
+ retry_delay_ wait4lines_ .1 6 4
+ local test_func=wait4lines_
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ wait4lines_ 0.1 4
+ local delay=0.1
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 2 -ge 4 ']'
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ wait4lines_ 0.2 4
+ local delay=0.2
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 3 -ge 4 ']'
+ sleep 0.2
+ return 1
+ time_fail=1
++ expr 2 + 1
+ attempt=3
++ expr 2 '*' 2
+ num_sleeps=4
+ test 3 -le 6
++ gawk -v n=4 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.4
+ wait4lines_ 0.4 4
+ local delay=0.4
+ local elc=4
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 -ge 4 ']'
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 31225
+ wait 31225
++ countlines_
++ grep -Ev 'inotify (resources exhausted|cannot be used)' out
++ wc -l
+ '[' 4 = 4 ']'
+ grep -F 'cannot follow' out
tail: untailable: cannot follow end of this type of file
+ grep -E 'become accessible|has appeared' out
tail: 'untailable' has become accessible
+ grep -F 'giving up' out
+ grep -F foo out
foo
+ rm -fd untailable out
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ kill 31225
+ test '' = yes
+ cd /mnt/lfs/sources/coreutils-8.30
+ chmod -R u+rwx /mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD
+ rm -rf /mnt/lfs/sources/coreutils-8.30/gt-retry.sh.5dZD
+ exit 0
PASS tests/tail-2/retry.sh (exit status: 0)
