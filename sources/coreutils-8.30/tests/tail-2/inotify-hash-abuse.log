++ initial_cwd_=/mnt/lfs/sources/coreutils-8.30
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /mnt/lfs/sources/coreutils-8.30 gt-inotify-hash-abuse.sh.XXXX
+++ case $# in
+++ destdir_=/mnt/lfs/sources/coreutils-8.30
+++ template_=gt-inotify-hash-abuse.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/mnt/lfs/sources/coreutils-8.30/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19
+++ case $d in
+++ :
+++ test -d /mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19
++++ ls -dgo /mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19
+++ perms='drwx------ 2 4096 Nov 26 23:38 /mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19'
+++ case $perms in
+++ :
+++ echo /mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19
+++ return
++ test_dir_=/mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19
++ cd /mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/mnt/lfs/sources/coreutils-8.30/./src
+ case $abs_path_dir_ in
+ PATH=/mnt/lfs/sources/coreutils-8.30/./src:/mnt/lfs/sources/coreutils-8.30/src:/tools/bin:/bin:/usr/bin:/sbin:/usr/sbin
+ create_exe_shims_ /mnt/lfs/sources/coreutils-8.30/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ n=9
+ seq 9
+ xargs touch
+ fastpoll='-s.1 --max-unchanged-stats=1'
+ for mode in '' '---disable-inotify'
+ rm -f out
+ pid=32046
+ echo x
+ tail_re='^x$'
+ retry_delay_ check_tail_output .1 7
+ local test_func=check_tail_output
+ local init_delay=.1
+ local max_n_tries=7
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 7
++ seq 9
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ tail -s.1 --max-unchanged-stats=1 -qF 1 2 3 4 5 6 7 8 9
+ local delay=0.1
+ check_tail_output 0.1
+ local delay=0.1
+ grep '^x$' out
+ time_fail=0
+ break
+ test 0 = 0
+ mv 1 f
+ tail_re=inaccessible
+ retry_delay_ check_tail_output .1 7
+ local test_func=check_tail_output
+ local init_delay=.1
+ local max_n_tries=7
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 7
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output 0.1
+ local delay=0.1
+ grep inaccessible out
+ time_fail=0
+ break
+ test 0 = 0
+ echo a
+ tail_re='has appeared'
+ retry_delay_ check_tail_output .1 6
+ local test_func=check_tail_output
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output 0.1
+ local delay=0.1
+ grep 'has appeared' out
+ time_fail=0
+ break
+ test 0 = 0
+ kill -0 32046
+ cleanup_
+ kill 32046
+ wait 32046
+ for mode in '' '---disable-inotify'
+ rm -f out
+ pid=32059
+ echo x
+ tail_re='^x$'
+ retry_delay_ check_tail_output .1 7
+ local test_func=check_tail_output
+ local init_delay=.1
+ local max_n_tries=7
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 7
++ seq 9
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ tail ---disable-inotify -s.1 --max-unchanged-stats=1 -qF 1 2 3 4 5 6 7 8 9
+ local delay=0.1
+ check_tail_output 0.1
+ local delay=0.1
+ grep '^x$' out
+ time_fail=0
+ break
+ test 0 = 0
+ mv 1 f
+ tail_re=inaccessible
+ retry_delay_ check_tail_output .1 7
+ local test_func=check_tail_output
+ local init_delay=.1
+ local max_n_tries=7
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 7
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output 0.1
+ local delay=0.1
+ grep inaccessible out
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 7
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ check_tail_output 0.2
+ local delay=0.2
+ grep inaccessible out
+ time_fail=0
+ break
+ test 0 = 0
+ echo a
+ tail_re='has appeared'
+ retry_delay_ check_tail_output .1 6
+ local test_func=check_tail_output
+ local init_delay=.1
+ local max_n_tries=6
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 6
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output 0.1
+ local delay=0.1
+ grep 'has appeared' out
+ sleep 0.1
+ return 1
+ time_fail=1
++ expr 1 + 1
+ attempt=2
++ expr 1 '*' 2
+ num_sleeps=2
+ test 2 -le 6
++ gawk -v n=2 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.2
+ check_tail_output 0.2
+ local delay=0.2
+ grep 'has appeared' out
+ time_fail=0
+ break
+ test 0 = 0
+ kill -0 32059
+ cleanup_
+ kill 32059
+ wait 32059
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ kill 32059
+ test '' = yes
+ cd /mnt/lfs/sources/coreutils-8.30
+ chmod -R u+rwx /mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19
+ rm -rf /mnt/lfs/sources/coreutils-8.30/gt-inotify-hash-abuse.sh.5J19
+ exit 0
PASS tests/tail-2/inotify-hash-abuse.sh (exit status: 0)
