++ initial_cwd_=/mnt/lfs/sources/coreutils-8.30
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /mnt/lfs/sources/coreutils-8.30 gt-inotify-rotate-resources.sh.XXXX
+++ case $# in
+++ destdir_=/mnt/lfs/sources/coreutils-8.30
+++ template_=gt-inotify-rotate-resources.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/mnt/lfs/sources/coreutils-8.30/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9
+++ case $d in
+++ :
+++ test -d /mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9
++++ ls -dgo /mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9
+++ perms='drwx------ 2 4096 Nov 26 23:38 /mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9'
+++ case $perms in
+++ :
+++ echo /mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9
+++ return
++ test_dir_=/mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9
++ cd /mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/mnt/lfs/sources/coreutils-8.30/./src
+ case $abs_path_dir_ in
+ PATH=/mnt/lfs/sources/coreutils-8.30/./src:/mnt/lfs/sources/coreutils-8.30/src:/tools/bin:/bin:/usr/bin:/sbin:/usr/sbin
+ create_exe_shims_ /mnt/lfs/sources/coreutils-8.30/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ require_local_dir_
+ require_mount_list_
+ local 'mount_list_fail=cannot read table of mounted file systems'
+ df --local
+ grep -F 'cannot read table of mounted file systems'
+ is_local_dir_ .
+ test 1 = 1
+ df --local .
+ grep '^#define HAVE_INOTIFY 1' /mnt/lfs/sources/coreutils-8.30/lib/config.h
+ require_strace_ inotify_add_watch,inotify_rm_watch
+ test 1 = 1
+ strace -V
+ strace -qe inotify_add_watch,inotify_rm_watch echo
+ strace -o log-help ls --help
++ wc -l
+ n_lines_help=61
+ rm -f log-help
+ test 61 = 0
+ test 61 = 1
+ fastpoll='-s.1 --max-unchanged-stats=1'
+ touch k
+ pid=33927
+ reverted_to_polling_=0
+ timeout 180 strace -e inotify_add_watch,inotify_rm_watch -o strace.out tail -F -s.1 --max-unchanged-stats=1 k
++ seq 2
+ for i in $(seq 2)
+ echo 1
1
+ echo tailed
+ strace_re='inotify_add_watch.*MODIFY'
+ retry_delay_ check_strace .1 8
+ local test_func=check_strace
+ local init_delay=.1
+ local max_n_tries=8
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 8
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_strace 0.1
+ local delay=0.1
+ grep 'inotify_add_watch.*MODIFY' strace.out
+ time_fail=0
+ break
+ test 0 = 0
+ grep -F 'reverting to polling' out
+ test ''
+ mv k k.tmp
+ grep_timeout inaccessible
+ tail_re=inaccessible
+ retry_delay_ check_tail_output .1 8
+ local test_func=check_tail_output
+ local init_delay=.1
+ local max_n_tries=8
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 8
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output 0.1
+ local delay=0.1
+ grep inaccessible out
+ time_fail=0
+ break
+ test 0 = 0
+ test 1 -gt 1
+ for i in $(seq 2)
+ echo 2
2
+ echo tailed
+ strace_re='inotify_add_watch.*MODIFY'
+ retry_delay_ check_strace .1 8
+ local test_func=check_strace
+ local init_delay=.1
+ local max_n_tries=8
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 8
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_strace 0.1
+ local delay=0.1
+ grep 'inotify_add_watch.*MODIFY' strace.out
+ time_fail=0
+ break
+ test 0 = 0
+ grep -F 'reverting to polling' out
+ test ''
+ mv k k.tmp
+ grep_timeout inaccessible
+ tail_re=inaccessible
+ retry_delay_ check_tail_output .1 8
+ local test_func=check_tail_output
+ local init_delay=.1
+ local max_n_tries=8
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 8
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_tail_output 0.1
+ local delay=0.1
+ grep inaccessible out
+ time_fail=0
+ break
+ test 0 = 0
+ test 2 -gt 1
+ strace_re=inotify_rm_watch
+ retry_delay_ check_strace .1 8
+ local test_func=check_strace
+ local init_delay=.1
+ local max_n_tries=8
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 8
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ check_strace 0.1
+ local delay=0.1
+ grep inotify_rm_watch strace.out
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 33927
+ wait 33927
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ kill 33927
+ test '' = yes
+ cd /mnt/lfs/sources/coreutils-8.30
+ chmod -R u+rwx /mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9
+ rm -rf /mnt/lfs/sources/coreutils-8.30/gt-inotify-rotate-resources.sh.ova9
+ exit 0
PASS tests/tail-2/inotify-rotate-resources.sh (exit status: 0)
