++ initial_cwd_=/mnt/lfs/sources/coreutils-8.30
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /mnt/lfs/sources/coreutils-8.30 gt-tail-n0f.sh.XXXX
+++ case $# in
+++ destdir_=/mnt/lfs/sources/coreutils-8.30
+++ template_=gt-tail-n0f.sh.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/mnt/lfs/sources/coreutils-8.30/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ
+++ case $d in
+++ :
+++ test -d /mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ
++++ ls -dgo /mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ
+++ perms='drwx------ 2 4096 Nov 26 23:38 /mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ'
+++ case $perms in
+++ :
+++ echo /mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ
+++ return
++ test_dir_=/mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ
++ cd /mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ./src
+ test 1 '!=' 0
+ path_dir_=./src
+ case $path_dir_ in
+ abs_path_dir_=/mnt/lfs/sources/coreutils-8.30/./src
+ case $abs_path_dir_ in
+ PATH=/mnt/lfs/sources/coreutils-8.30/./src:/mnt/lfs/sources/coreutils-8.30/src:/tools/bin:/bin:/usr/bin:/sbin:/usr/sbin
+ create_exe_shims_ /mnt/lfs/sources/coreutils-8.30/./src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ print_ver_ tail
+ require_built_ tail
+ skip_=no
+ for i in "$@"
+ case " $built_programs " in
+ test no = yes
+ test yes = yes
+ local i
+ for i in $*
+ env tail --version
tail (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Paul Rubin, David MacKenzie, Ian Lance Taylor,
and Jim Meyering.
+ require_proc_pid_status_
+ local pid=44017
+ sleep .5
+ sleep 2
+ grep '^State:[	 ]*[S]' /proc/44017/status
+ kill 44017
+ touch empty
+ echo anything
+ touch unreadable
+ chmod 0 unreadable
+ tail -c0 unreadable
+ tail -n0 unreadable
+ for mode in '' '---disable-inotify'
+ for file in empty nonempty
+ for c_or_n in c n
+ pid=44025
+ retry_delay_ tail_sleeping .1 4
+ local test_func=tail_sleeping
+ local init_delay=.1
+ local max_n_tries=4
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 4
+ tail --sleep=4 -c 0 -f empty
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ tail_sleeping 0.1
+ local delay=0.1
+ sleep 0.1
++ get_process_status_ 44025
++ sed -n '/^State:[	 ]*\([[:alpha:]]\).*/s//\1/p' /proc/44025/status
+ state=S
+ case $state in
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 44025
+ wait 44025
+ for c_or_n in c n
+ pid=44030
+ retry_delay_ tail_sleeping .1 4
+ local test_func=tail_sleeping
+ local init_delay=.1
+ local max_n_tries=4
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 4
+ tail --sleep=4 -n 0 -f empty
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ tail_sleeping 0.1
+ local delay=0.1
+ sleep 0.1
++ get_process_status_ 44030
++ sed -n '/^State:[	 ]*\([[:alpha:]]\).*/s//\1/p' /proc/44030/status
+ state=S
+ case $state in
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 44030
+ wait 44030
+ for file in empty nonempty
+ for c_or_n in c n
+ pid=44035
+ retry_delay_ tail_sleeping .1 4
+ local test_func=tail_sleeping
+ local init_delay=.1
+ local max_n_tries=4
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 4
+ tail --sleep=4 -c 0 -f nonempty
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ tail_sleeping 0.1
+ local delay=0.1
+ sleep 0.1
++ get_process_status_ 44035
++ sed -n '/^State:[	 ]*\([[:alpha:]]\).*/s//\1/p' /proc/44035/status
+ state=S
+ case $state in
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 44035
+ wait 44035
+ for c_or_n in c n
+ pid=44040
+ retry_delay_ tail_sleeping .1 4
+ local test_func=tail_sleeping
+ local init_delay=.1
+ local max_n_tries=4
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 4
+ tail --sleep=4 -n 0 -f nonempty
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ tail_sleeping 0.1
+ local delay=0.1
+ sleep 0.1
++ get_process_status_ 44040
++ sed -n '/^State:[	 ]*\([[:alpha:]]\).*/s//\1/p' /proc/44040/status
+ state=S
+ case $state in
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 44040
+ wait 44040
+ for mode in '' '---disable-inotify'
+ for file in empty nonempty
+ for c_or_n in c n
+ pid=44045
+ retry_delay_ tail_sleeping .1 4
+ local test_func=tail_sleeping
+ local init_delay=.1
+ local max_n_tries=4
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 4
+ tail --sleep=4 -c 0 -f ---disable-inotify empty
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ tail_sleeping 0.1
+ local delay=0.1
+ sleep 0.1
++ get_process_status_ 44045
++ sed -n '/^State:[	 ]*\([[:alpha:]]\).*/s//\1/p' /proc/44045/status
+ state=S
+ case $state in
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 44045
+ wait 44045
+ for c_or_n in c n
+ pid=44050
+ retry_delay_ tail_sleeping .1 4
+ local test_func=tail_sleeping
+ local init_delay=.1
+ local max_n_tries=4
+ shift 3
+ local attempt=1
+ tail --sleep=4 -n 0 -f ---disable-inotify empty
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 4
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ tail_sleeping 0.1
+ local delay=0.1
+ sleep 0.1
++ get_process_status_ 44050
++ sed -n '/^State:[	 ]*\([[:alpha:]]\).*/s//\1/p' /proc/44050/status
+ state=S
+ case $state in
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 44050
+ wait 44050
+ for file in empty nonempty
+ for c_or_n in c n
+ pid=44055
+ retry_delay_ tail_sleeping .1 4
+ local test_func=tail_sleeping
+ local init_delay=.1
+ local max_n_tries=4
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 4
+ tail --sleep=4 -c 0 -f ---disable-inotify nonempty
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ tail_sleeping 0.1
+ local delay=0.1
+ sleep 0.1
++ get_process_status_ 44055
++ sed -n '/^State:[	 ]*\([[:alpha:]]\).*/s//\1/p' /proc/44055/status
+ state=S
+ case $state in
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 44055
+ wait 44055
+ for c_or_n in c n
+ pid=44060
+ retry_delay_ tail_sleeping .1 4
+ local test_func=tail_sleeping
+ local init_delay=.1
+ local max_n_tries=4
+ shift 3
+ local attempt=1
+ local num_sleeps=1
+ local time_fail
+ test 1 -le 4
+ tail --sleep=4 -n 0 -f ---disable-inotify nonempty
++ gawk -v n=1 -v s=.1 'BEGIN { print s * n }'
+ local delay=0.1
+ tail_sleeping 0.1
+ local delay=0.1
+ sleep 0.1
++ get_process_status_ 44060
++ sed -n '/^State:[	 ]*\([[:alpha:]]\).*/s//\1/p' /proc/44060/status
+ state=S
+ case $state in
+ time_fail=0
+ break
+ test 0 = 0
+ cleanup_
+ kill 44060
+ wait 44060
+ Exit 0
+ set +e
+ exit 0
+ exit 0
+ remove_tmp_
+ __st=0
+ cleanup_
+ kill 44060
+ test '' = yes
+ cd /mnt/lfs/sources/coreutils-8.30
+ chmod -R u+rwx /mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ
+ rm -rf /mnt/lfs/sources/coreutils-8.30/gt-tail-n0f.sh.6VEQ
+ exit 0
PASS tests/tail-2/tail-n0f.sh (exit status: 0)
