++ initial_cwd_=/mnt/lfs/sources/diffutils-3.6/tests
+++ testdir_prefix_
+++ printf gt
++ pfx_=gt
+++ mktempd_ /mnt/lfs/sources/diffutils-3.6/tests gt-no-dereference.XXXX
+++ case $# in
+++ destdir_=/mnt/lfs/sources/diffutils-3.6/tests
+++ template_=gt-no-dereference.XXXX
+++ MAX_TRIES_=4
+++ case $destdir_ in
+++ destdir_slash_=/mnt/lfs/sources/diffutils-3.6/tests/
+++ case $template_ in
++++ unset TMPDIR
+++ d=/mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu
+++ case $d in
+++ :
+++ test -d /mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu
++++ ls -dgo /mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu
+++ perms='drwx------ 2 4096 Nov 26 23:42 /mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu'
+++ case $perms in
+++ :
+++ echo /mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu
+++ return
++ test_dir_=/mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu
++ cd /mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu
++ gl_init_sh_nl_='
'
++ IFS=' 	
'
++ for sig_ in 1 2 3 13 15
+++ expr 1 + 128
++ eval 'trap '\''Exit 129'\'' 1'
+++ trap 'Exit 129' 1
++ for sig_ in 1 2 3 13 15
+++ expr 2 + 128
++ eval 'trap '\''Exit 130'\'' 2'
+++ trap 'Exit 130' 2
++ for sig_ in 1 2 3 13 15
+++ expr 3 + 128
++ eval 'trap '\''Exit 131'\'' 3'
+++ trap 'Exit 131' 3
++ for sig_ in 1 2 3 13 15
+++ expr 13 + 128
++ eval 'trap '\''Exit 141'\'' 13'
+++ trap 'Exit 141' 13
++ for sig_ in 1 2 3 13 15
+++ expr 15 + 128
++ eval 'trap '\''Exit 143'\'' 15'
+++ trap 'Exit 143' 15
++ trap remove_tmp_ 0
+ path_prepend_ ../src
+ test 1 '!=' 0
+ path_dir_=../src
+ case $path_dir_ in
+ abs_path_dir_=/mnt/lfs/sources/diffutils-3.6/tests/../src
+ case $abs_path_dir_ in
+ PATH=/mnt/lfs/sources/diffutils-3.6/tests/../src:/mnt/lfs/sources/diffutils-3.6/src:/tools/bin:/bin:/usr/bin
+ create_exe_shims_ /mnt/lfs/sources/diffutils-3.6/tests/../src
+ case $EXEEXT in
+ return 0
+ shift
+ test 0 '!=' 0
+ export PATH
+ echo 'Simple contents'
+ echo 'Sample contents'
+ echo 'Sample contents'
+ ln -s regular1 symlink1
+ ln -s regular1 symlink1bis
+ ln -s regular2 symlink2
+ ln -s regular3 symlink3
+ returns_ 1 diff --no-dereference regular1 regular2
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ returns_ 1 diff --no-dereference regular1 symlink1
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ returns_ 1 diff --no-dereference symlink1 regular1
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ diff --no-dereference symlink1 symlink1bis
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ returns_ 1 diff --no-dereference symlink1 symlink2
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ returns_ 1 diff --no-dereference symlink2 symlink3
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ mkdir subdir1a
+ mkdir subdir1b
+ ln -s nonexistent subdir1a/foo
+ ln -s ../regular1 subdir1a/bar
+ returns_ 1 diff -r --no-dereference subdir1a subdir1b
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ mkdir subdir2a
+ mkdir subdir2b
+ ln -s nonexistent subdir2b/foo
+ ln -s ../regular1 subdir2b/bar
+ returns_ 1 diff -r --no-dereference subdir2a subdir2b
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ mkdir subdir3a
+ mkdir subdir3b
+ cp regular1 subdir3a/foo
+ cp regular2 subdir3b/foo
+ returns_ 1 diff -r --no-dereference subdir3a subdir3b
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ mkdir subdir4a
+ mkdir subdir4b
+ cp regular1 subdir4a/foo
+ ln -s ../regular1 subdir4b/foo
+ returns_ 1 diff -r --no-dereference subdir4a subdir4b
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ mkdir subdir5a
+ mkdir subdir5b
+ ln -s ../regular1 subdir5a/foo
+ cp regular1 subdir5b/foo
+ returns_ 1 diff -r --no-dereference subdir5a subdir5b
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ mkdir subdir6a
+ mkdir subdir6b
+ ln -s ../regular1 subdir6a/foo
+ ln -s ../regular1 subdir6b/foo
+ diff -r --no-dereference subdir6a subdir6b
+ compare /dev/null out
+ compare_dev_null_ /dev/null out
+ test 2 = 2
+ test x/dev/null = x/dev/null
+ test -s out
+ return 0
+ return 0
+ mkdir subdir7a
+ mkdir subdir7b
+ ln -s ../regular1 subdir7a/foo
+ ln -s ../regular2 subdir7b/foo
+ returns_ 1 diff -r --no-dereference subdir7a subdir7b
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ mkdir subdir8a
+ mkdir subdir8b
+ ln -s ../regular2 subdir8a/foo
+ ln -s ../regular3 subdir8b/foo
+ returns_ 1 diff -r --no-dereference subdir8a subdir8b
+ cat
+ compare expected out
+ compare_dev_null_ expected out
+ test 2 = 2
+ test xexpected = x/dev/null
+ test xout = x/dev/null
+ return 2
+ case $? in
+ compare_ expected out
+ diff -u expected out
+ Exit
+ set +e
+ exit
+ exit
+ remove_tmp_
+ __st=0
+ cleanup_
+ :
+ test '' = yes
+ cd /mnt/lfs/sources/diffutils-3.6/tests
+ chmod -R u+rwx /mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu
+ rm -rf /mnt/lfs/sources/diffutils-3.6/tests/gt-no-dereference.RYzu
+ exit 0
PASS no-dereference (exit status: 0)
